[{"/home/ubuntu/client/frontend-aevin/src/index.js":"1","/home/ubuntu/client/frontend-aevin/src/App.js":"2","/home/ubuntu/client/frontend-aevin/src/reportWebVitals.js":"3","/home/ubuntu/client/frontend-aevin/src/global.js":"4","/home/ubuntu/client/frontend-aevin/src/pages/HomePage.js":"5","/home/ubuntu/client/frontend-aevin/src/pages/ViewerPage.js":"6","/home/ubuntu/client/frontend-aevin/src/pages/AddCaptionPage.js":"7","/home/ubuntu/client/frontend-aevin/src/pages/CreatePostPage.js":"8","/home/ubuntu/client/frontend-aevin/src/pages/PostExpandPage.js":"9","/home/ubuntu/client/frontend-aevin/src/pages/AddProfilePicturePage.js":"10","/home/ubuntu/client/frontend-aevin/src/context/UserLoginContext.js":"11","/home/ubuntu/client/frontend-aevin/src/context/ViewerLoginContext.js":"12","/home/ubuntu/client/frontend-aevin/src/components/ChangePicture/ChangePicture.js":"13","/home/ubuntu/client/frontend-aevin/src/components/ChangePicture/ChangePictureNew.js":"14","/home/ubuntu/client/frontend-aevin/src/components/HomePageView/HomePageView.js":"15","/home/ubuntu/client/frontend-aevin/src/components/TopBar/TopBar.js":"16","/home/ubuntu/client/frontend-aevin/src/components/TopBar/TopBarBackButton.js":"17","/home/ubuntu/client/frontend-aevin/src/components/Links/LinksContainer.js":"18","/home/ubuntu/client/frontend-aevin/src/components/BottomBar/BottomBar.js":"19","/home/ubuntu/client/frontend-aevin/src/components/PostFeed/PostFeed.js":"20","/home/ubuntu/client/frontend-aevin/src/components/ViewerProfile/ViewerProfile.js":"21","/home/ubuntu/client/frontend-aevin/src/components/YoutubeList/YoutubeList.js":"22","/home/ubuntu/client/frontend-aevin/src/components/Post/AuthenticatedPost.js":"23","/home/ubuntu/client/frontend-aevin/src/components/Post/AddComment.js":"24","/home/ubuntu/client/frontend-aevin/src/components/Post/CommentSection.js":"25","/home/ubuntu/client/frontend-aevin/src/components/controls/Button.js":"26","/home/ubuntu/client/frontend-aevin/src/context/HomePageContext.js":"27","/home/ubuntu/client/frontend-aevin/src/components/YoutubeList/YoutubeVideo.js":"28","/home/ubuntu/client/frontend-aevin/src/components/Post/LikeButton.js":"29","/home/ubuntu/client/frontend-aevin/src/components/Post/Comment.js":"30","/home/ubuntu/client/frontend-aevin/src/components/RegisterForm/ViewerRegister.js":"31","/home/ubuntu/client/frontend-aevin/src/components/Links/Link.js":"32","/home/ubuntu/client/frontend-aevin/src/components/LoginForm/ViewerLogin.js":"33","/home/ubuntu/client/frontend-aevin/src/components/EditViewerData/EditViewerData.js":"34","/home/ubuntu/client/frontend-aevin/src/pages/UserPage.js":"35","/home/ubuntu/client/frontend-aevin/src/components/LandingPageView/LandingPageView.js":"36","/home/ubuntu/client/frontend-aevin/src/components/NavBar/NavBar.js":"37","/home/ubuntu/client/frontend-aevin/src/components/controls/Input.js":"38","/home/ubuntu/client/frontend-aevin/src/components/ChangePicture/ChangePictureViewer.js":"39","/home/ubuntu/client/frontend-aevin/src/components/useForm/useForm.js":"40","/home/ubuntu/client/frontend-aevin/src/components/EditUserData/EditUserData.js":"41","/home/ubuntu/client/frontend-aevin/src/components/NewPost/NewPost.js":"42","/home/ubuntu/client/frontend-aevin/src/components/LoginForm/LoginForm.js":"43","/home/ubuntu/client/frontend-aevin/src/components/RegisterForm/RegisterForm.js":"44","/home/ubuntu/client/frontend-aevin/src/components/Landing/Landing.js":"45","/home/ubuntu/client/frontend-aevin/src/components/EditUserData/EditLinkData.js":"46","/home/ubuntu/client/frontend-aevin/src/components/PhoneImage/PhoneImage.js":"47","/home/ubuntu/client/frontend-aevin/src/components/IntroText/IntroText.js":"48","/home/ubuntu/client/frontend-aevin/src/components/CallToAction/CallToAction.js":"49"},{"size":488,"mtime":1616153440948,"results":"50","hashOfConfig":"51"},{"size":5018,"mtime":1617014488303,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1616153440948,"results":"53","hashOfConfig":"51"},{"size":63,"mtime":1616153440948,"results":"54","hashOfConfig":"51"},{"size":268,"mtime":1617613056348,"results":"55","hashOfConfig":"51"},{"size":2595,"mtime":1617014488307,"results":"56","hashOfConfig":"51"},{"size":3524,"mtime":1617014488307,"results":"57","hashOfConfig":"51"},{"size":2070,"mtime":1616153440948,"results":"58","hashOfConfig":"51"},{"size":1173,"mtime":1617014488307,"results":"59","hashOfConfig":"51"},{"size":1119,"mtime":1616153440948,"results":"60","hashOfConfig":"51"},{"size":116,"mtime":1616153440948,"results":"61","hashOfConfig":"51"},{"size":120,"mtime":1616153440948,"results":"62","hashOfConfig":"51"},{"size":2887,"mtime":1616153440948,"results":"63","hashOfConfig":"51"},{"size":5122,"mtime":1616153440948,"results":"64","hashOfConfig":"51"},{"size":1262,"mtime":1616153440948,"results":"65","hashOfConfig":"51"},{"size":1598,"mtime":1616153440948,"results":"66","hashOfConfig":"51"},{"size":1889,"mtime":1616153440948,"results":"67","hashOfConfig":"51"},{"size":1445,"mtime":1616153440948,"results":"68","hashOfConfig":"51"},{"size":1107,"mtime":1617014488303,"results":"69","hashOfConfig":"51"},{"size":1607,"mtime":1617014488307,"results":"70","hashOfConfig":"51"},{"size":872,"mtime":1617014488307,"results":"71","hashOfConfig":"51"},{"size":1082,"mtime":1617014488307,"results":"72","hashOfConfig":"51"},{"size":4116,"mtime":1617014488307,"results":"73","hashOfConfig":"51"},{"size":5875,"mtime":1617014488307,"results":"74","hashOfConfig":"51"},{"size":749,"mtime":1616153440948,"results":"75","hashOfConfig":"51"},{"size":393,"mtime":1616153440948,"results":"76","hashOfConfig":"51"},{"size":118,"mtime":1616153440948,"results":"77","hashOfConfig":"51"},{"size":1436,"mtime":1617014488307,"results":"78","hashOfConfig":"51"},{"size":2046,"mtime":1616153440948,"results":"79","hashOfConfig":"51"},{"size":1355,"mtime":1616153440948,"results":"80","hashOfConfig":"51"},{"size":6432,"mtime":1617014488307,"results":"81","hashOfConfig":"51"},{"size":1409,"mtime":1616153440948,"results":"82","hashOfConfig":"51"},{"size":4463,"mtime":1617014488307,"results":"83","hashOfConfig":"51"},{"size":3733,"mtime":1617014488307,"results":"84","hashOfConfig":"51"},{"size":1659,"mtime":1617014488307,"results":"85","hashOfConfig":"51"},{"size":793,"mtime":1616153440948,"results":"86","hashOfConfig":"51"},{"size":1875,"mtime":1616153440948,"results":"87","hashOfConfig":"51"},{"size":489,"mtime":1616153440948,"results":"88","hashOfConfig":"51"},{"size":5220,"mtime":1617014488303,"results":"89","hashOfConfig":"51"},{"size":1057,"mtime":1616153440948,"results":"90","hashOfConfig":"51"},{"size":5166,"mtime":1617014488307,"results":"91","hashOfConfig":"51"},{"size":1292,"mtime":1616153440948,"results":"92","hashOfConfig":"51"},{"size":4018,"mtime":1616153440948,"results":"93","hashOfConfig":"51"},{"size":5738,"mtime":1616153440948,"results":"94","hashOfConfig":"51"},{"size":1313,"mtime":1616153440948,"results":"95","hashOfConfig":"51"},{"size":7490,"mtime":1617014488307,"results":"96","hashOfConfig":"51"},{"size":805,"mtime":1616153440948,"results":"97","hashOfConfig":"51"},{"size":1927,"mtime":1616153440948,"results":"98","hashOfConfig":"51"},{"size":1165,"mtime":1616153440948,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"ymyhmi",{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"102"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"102"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"102"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"102"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"102"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"/home/ubuntu/client/frontend-aevin/src/index.js",[],["230","231"],"/home/ubuntu/client/frontend-aevin/src/App.js",["232","233","234","235"],"import HomePage from './pages/HomePage'\nimport ViewerPage from './pages/ViewerPage'\nimport CreatePostPage from './pages/CreatePostPage'\nimport AddCaptionPage from './pages/AddCaptionPage'\nimport PostExpandPage from './pages/PostExpandPage'\nimport AddProfilePicturePage from './pages/AddProfilePicturePage'\n\nimport ChangePicture from './components/ChangePicture/ChangePicture'\nimport { useState, useEffect } from 'react'\n\nimport { BrowserRouter, Switch, Route, useLocation } from 'react-router-dom';\n\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport { makeStyles, CssBaseline } from '@material-ui/core'\n\nimport UserLoginContext from './context/UserLoginContext'\nimport ViewerLoginContext from './context/ViewerLoginContext'\n\nimport { serverURL } from './global'\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n}));\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: [\n            'Karla',\n            'sans-serif'\n        ].join(','),\n    },\n    palette: {\n        primary: {\n            main: '#38BEC9',\n            light: '#BEF8FD',\n            dark: '#0A6C74'\n        },\n        secondary: {\n            main: '#E66A6A',\n            light: '#FACDCD',\n            dark: '#BA2525'\n        },\n        neutral: {\n            light: '#FAF9F7',\n            dark: '#E8E6E1'\n        }\n    },\n})\n//provide context here\nconst App = () => {\n\n    const url = window.location.href.split('/')\n\n    const [ userData, setUserData ] = useState({\n        token: null,\n        user: null,\n        loginSuccess: null\n    })\n\n    const [ viewerData, setViewerData ] = useState({\n        token: null,\n        viewer: null,\n        loginSuccess: null\n    })\n\n    useEffect(() =>  {\n        async function checkLoggedIn() {\n            const isUserLoggedIn = await checkUserLoggedIn()\n            const isViewerLoggedIn = await checkViewerLoggedIn()\n\n            if (isUserLoggedIn){\n                if(url[3] !== \"\"){\n                }\n                else{\n                    setUserData({...isUserLoggedIn})\n                }\n            }\n            if(isViewerLoggedIn){\n                setViewerData({...isViewerLoggedIn})\n            }\n        }\n        checkLoggedIn()\n    }, [])\n\n    const classes = useStyles();\n    return (\n        <div>\n            <UserLoginContext.Provider value={{ userData, setUserData }}>\n            <ViewerLoginContext.Provider value={{ viewerData, setViewerData }}>\n                <ThemeProvider theme={theme}>\n                    <BrowserRouter>\n                        <Switch>\n                            <Route exact path='/' component={HomePage} />\n                            <Route exact path='/edit/changeProfilePicture' component={AddProfilePicturePage} />\n                            <Route exact path='/:usernameParam' render={(props) => <ViewerPage {...props} />} />\n                            <Route exact path='/edit/createPost' component={CreatePostPage} />\n                            <Route exact path='/edit/addCaption' component={AddCaptionPage} />\n                            <Route exact path='/post/:postid' render={(props) => <PostExpandPage{...props} />} />\n                        </Switch>\n                    </BrowserRouter>\n                </ThemeProvider>\n            </ViewerLoginContext.Provider>\n            </UserLoginContext.Provider>\n            <CssBaseline />\n        </div>\n    );\n}\n\nconst checkUserLoggedIn = async () => {\n    let token = localStorage.getItem('auth-token')\n    if (token === null) {\n        localStorage.setItem('auth-token', '')\n        token = '';\n    }\n    const tokenRes =  await verifyUserToken(token)\n    if(tokenRes.valid){\n        return({token: token, user: tokenRes.userObj, loginSuccess: true })\n    }\n    else{\n        return false\n    }\n}\n\nconst verifyUserToken = ( token ) => {\n    const verifyToken = {\n      method: 'post',\n      url: `${serverURL}api/user/tokenIsValid`,\n      headers: {\n        'auth-token': token\n      },\n      data :''\n    };\n    return axios(verifyToken)\n        .then(res => {\n            return res.data;\n        })\n        .catch(error => {\n            return error\n        });\n}\n\nconst checkViewerLoggedIn = async () => {\n    let token = localStorage.getItem('auth-token-viewer')\n    if (token === null) {\n        localStorage.setItem('auth-token-viewer', '')\n        token = '';\n    }\n    const tokenRes = await verifyViewerToken(token)\n    if(tokenRes.valid){\n        return({token, viewer: tokenRes.viewerObj, loginSuccess: true })\n    }\n    else{\n        return false\n    }\n}\n\nconst verifyViewerToken = ( token ) => {\n    const verifyToken = {\n      method: 'post',\n      url: `${serverURL}api/user/viewer/tokenIsValid`,\n      headers: {\n        'auth-token-viewer': token\n      },\n      data :''\n    };\n    return axios(verifyToken)\n        .then(res => {\n            return res.data;\n        })\n        .catch(error => {\n            return error\n        });\n}\n\nexport default App;\n","/home/ubuntu/client/frontend-aevin/src/reportWebVitals.js",[],"/home/ubuntu/client/frontend-aevin/src/global.js",[],"/home/ubuntu/client/frontend-aevin/src/pages/HomePage.js",["236"],"\nimport React from 'react'\n\nimport HomePageView from './../components/HomePageView/HomePageView'\nimport Landing from './../components/Landing/Landing'\n\nconst HomePage = () => {\n    return(\n\t    <div>\n\t    \t<HomePageView />\n\t    </div>\n    )\n}\n\nexport default HomePage\n","/home/ubuntu/client/frontend-aevin/src/pages/ViewerPage.js",["237"],"import { useParams, } from 'react-router-dom'\nimport { useEffect, useContext, useState } from 'react'\n\nimport UserLoginContext from './../context/UserLoginContext'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport TopBar from './../components/TopBar/TopBar'\nimport LinksContainer from './../components/Links/LinksContainer'\nimport BottomBar from './../components/BottomBar/BottomBar'\nimport PostFeed from './../components/PostFeed/PostFeed'\nimport ViewerProfile from './../components/ViewerProfile/ViewerProfile'\nimport YoutubeList from './../components/YoutubeList/YoutubeList'\n\nimport { serverURL } from './../global'\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles( theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    roots:{\n\n    }\n}))\n\nconst ViewerPage = () => {\n    const classes= useStyles()\n\n    const [tab, setTab] = useState(0);\n\n    const { usernameParam }  = useParams();\n\n    const { userData, setUserData } = useContext(UserLoginContext)\n\n    useEffect(() => {\n        async function callUserDataAPI() {\n            const user = await userDataAPI(usernameParam)\n            setUserData({...userData, user: user})\n        }\n        callUserDataAPI()\n    }, [])\n\n    const renderView = () => {\n        switch(tab){\n            case 0:\n                //if viewerData then return interactable else return login popup on interaction page\n                return (\n                    <>\n                        <LinksContainer />\n                        <PostFeed />\n                    </>\n                )\n            case 1:\n                return <YoutubeList />\n            case 2:\n                return <ViewerProfile />\n            default:\n                return new Error('This does not exist');\n        }\n    }\n\n    return(\n        <div className={classes.root}>\n            {\n                userData.user ?\n                    (\n                        <>\n                        <TopBar />\n                        {\n                            renderView()\n                        }\n                        <BottomBar value={tab} onChange={setTab} />\n                        </>\n                    )\n                    :\n                    ( 'if a lion could talk you wouldnt understand it' )\n\n            }\n        </div>\n    )\n}\n\nconst userDataAPI = async (username) => {\n    return axios.get(`${serverURL}${username}`)\n        .then( res => {\n            return res.data\n        } )\n        .catch( err => {\n            return err\n        })\n}\n\nexport default ViewerPage;\n","/home/ubuntu/client/frontend-aevin/src/pages/AddCaptionPage.js",["238","239","240"],"//#add content[0] property when you create a post\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { useEffect, useContext, useState } from 'react'\n\nimport UserLoginContext from './../context/UserLoginContext'\n\nimport { TextareaAutosize, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core'\n\nimport axios from 'axios'\n\nimport { serverURL } from './../global'\n\nconst useStyles = makeStyles( theme => ({\n    root: {\n        width: '100%',\n        height: '100vw',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    textfield: {\n        width: '100%',\n        marginLeft: '30px',\n        border: 'none',\n        padding: '10px',\n        fontSize: '25px',\n        backgroundColor: theme.palette.neutral.light\n    },\n    button:{\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.neutral.light,\n        borderRadius: '25px',\n        minWidth: '75px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main,\n        }\n    }\n}))\n\n\nconst AddCaptionPage = () => {\n\n    const classes = useStyles()\n\n    const { userData, setUserData } = useContext(UserLoginContext)\n\n    const { token } = userData\n\n    const [ caption, setCaption ] = useState('')\n\n    const [ file, setFile ] = useState()\n\n    const location = useLocation();\n\n    const history = useHistory();\n\n    useEffect(() => {\n\n        const selectedFile = location.selectedFile\n\n        if (selectedFile) {\n            setFile(selectedFile)\n        }\n        else{\n            history.push('/')\n        }\n    }, [])\n\n    const handlePost = async () => {\n        const editData = {\n            editData: [{\n                \"type\": 'image-post',\n                \"content\": [{\n                    text: caption,\n                    url: ''\n                }]\n            }]\n        }\n\n        const createPostData = JSON.stringify(editData)\n        const res = await callPostAPI( file, createPostData, token)\n        if(res){\n            console.log(res.data)\n\n            let { user } = userData\n            let { posts } = user\n\n            //setUserData({\n            //    ...userData,\n            //    user: {\n            //            ...user,\n            //            posts: [res.data, ...posts]\n            //        }\n            //})\n            history.push('/')\n        }\n    }\n\n    const handleCaptionChange = (e) => {\n        setCaption(e.target.value)\n    }\n\n    return(\n        <div className={classes.root}>\n            <TextareaAutosize\n                className={classes.textfield}\n                onChange={handleCaptionChange}\n                rowsMax={4}\n                aria-label=\"maximum height\"\n                placeholder=\"Add a caption\"/>\n            <Button onClick={handlePost} size='large' variant='outlined' className={classes.button} color=\"inherit\">Post</Button>\n        </div>\n    )\n}\n\nconst callPostAPI = async ( imageToUpload, createPostData, token ) => {\n\n    const fd = new FormData();\n\n    fd.append('image', imageToUpload, imageToUpload.name)\n\n    const config = {\n        method: 'post',\n        url: `${serverURL}api/createPost/?editData=` + createPostData,\n        headers: {\n          'auth-token': token,\n        },\n        data : fd\n    };\n\n    return axios(config)\n        .then( res => {\n            return res\n        })\n        .catch( err => {\n            return err\n        })\n}\n\nexport default AddCaptionPage\n","/home/ubuntu/client/frontend-aevin/src/pages/CreatePostPage.js",["241","242"],"import NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { useLocation, useHistory } from 'react-router-dom'\n\nimport { useEffect } from 'react'\n\nimport { makeStyles, AppBar, IconButton, Typography, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles( theme => ({\n    image: {\n        margin: '10px',\n        marginTop: '60px',\n        width: '100%',\n        height: 'auto'\n    },\n    appbar: {\n        backgroundColor: theme.palette.neutral.dark,\n        position: 'fixed',\n        marginBottom: '10px',\n        boxShadow: 'none'\n    },\n    container:{\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    title:{\n        fontWeight: 600\n    },\n    nextIcon: {\n    }\n}))\n\nconst CreatePostPage = () => {\n\n    const history = useHistory();\n\n    const location = useLocation();\n\n    const classes = useStyles()\n\n    const selectedFile = location.selectedFile\n\n    useEffect(() => {\n        if (selectedFile) {\n            const img = document.querySelector('#photo');\n\n            const reader = new FileReader();\n\n            reader.readAsDataURL(selectedFile);\n\n            setTimeout(() => img.setAttribute('src', reader.result), 50)\n\n        }\n        else{\n            history.push('/')\n        }\n    }, [])\n\n    const onClickNext = () => {\n        history.push({pathname: '/edit/addCaption',\n            selectedFile: selectedFile\n        })\n    }\n\n    return(\n        <div>\n            <AppBar className={classes.appbar}>\n                <Toolbar className={classes.container}>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Create Post\n                    </Typography>\n                    <IconButton className={classes.nextIcon} onClick={onClickNext}>\n                        <NavigateNextIcon/>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <img className={classes.image}src='https://developers.google.com/web/images/contributors/no-photo.jpg' id='photo'/>\n        </div>\n    )\n}\nexport default CreatePostPage;\n\n","/home/ubuntu/client/frontend-aevin/src/pages/PostExpandPage.js",["243","244"],"import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { IconButton } from '@material-ui/core';\nimport TopBarBackButton from './../components/TopBar/TopBarBackButton'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AuthenticatedPost from './../components/Post/AuthenticatedPost'\nimport AddComment from './../components/Post/AddComment'\nimport CommentSection from './../components/Post/CommentSection'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n        maxWidth: '650px'\n    }\n}));\n\n\nconst PostExpandPage = () => {\n\n    const classes = useStyles();\n\n    const location = useLocation();\n\n    const { post } = location.postData;\n\n    const handleBackButtonClick = () => {\n        console.log('going back');\n    }\n\n    console.log(post)\n    return(\n        <div className={classes.root}>\n            <TopBarBackButton />\n            <AuthenticatedPost post={post} />\n            <AddComment post={post} />\n            <CommentSection comments={post.comments}/>\n        </div>\n    )\n}\n\nexport default PostExpandPage\n","/home/ubuntu/client/frontend-aevin/src/pages/AddProfilePicturePage.js",[],"/home/ubuntu/client/frontend-aevin/src/context/UserLoginContext.js",[],"/home/ubuntu/client/frontend-aevin/src/context/ViewerLoginContext.js",[],"/home/ubuntu/client/frontend-aevin/src/components/ChangePicture/ChangePicture.js",["245","246"],"import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport Button from './../controls/Button';\n\nimport UserLoginContext from './../../context/UserLoginContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '80%',\n    },\n    profilePictureContainer: {\n        height: \"200px\",\n        width: \"200px\",\n        position: \"absolute\",\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        border: \"1px solid grey\",\n    },\n    photo: {\n        height: \"auto\",\n        width: \"100%\"\n    },\n    choosePhoto: {\n        height: \"40px\",\n        width: \"100%\",\n        position: \"absolute\",\n        bottom: \"0\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        textAlign: \"center\",\n        background:\"rgba(0, 0, 0, 0.7)\" ,\n        color: \"wheat\",\n        lineHeight: \"30px\",\n        fontFamily: \"sans-serif\",\n        fontSize: \"15px\",\n        cursor: \"pointer\",\n        display: \"block\"\n    },\n    file: {\n        display: \"none\"\n    },\n    button: {\n        display: 'none',\n        justifySelf: 'center',\n        alignSelf: 'center',\n        marginRight: '150px',\n        marginLeft: '-30px',\n        marginBottom: '-50px',\n        marginTop: '100px',\n\n\n    }\n}))\nconst ChangePicture = () => {\n    const classes = useStyles();\n\n    const { userData } = useContext(UserLoginContext)\n\n    const imageSrc = userData.user ? userData.user.profilePicture : 'https://developers.google.com/web/images/contributors/no-photo.jpg'\n\n    const handle = () => {\n        console.log('hi')\n    }\n\n    const handleFileSelect = (event) => {\n        const selectedFile = event.target.files[0];\n\n        if (selectedFile) {\n            const img = document.querySelector('#photo');\n            const reader = new FileReader();\n\n            reader.addEventListener('load', function(){\n                img.setAttribute('src', reader.result);\n            });\n\n            reader.readAsDataURL(selectedFile);\n        }\n    }\n\n    return(\n        <>\n        <div className={classes.root}>\n            <div className={classes.profilePictureContainer}>\n                <img src={imageSrc} className={classes.photo} id='photo' />\n                <input type=\"file\" id=\"file\" className={classes.file} onChange={handleFileSelect} />\n                <label htmlFor=\"file\" className={classes.choosePhoto}>Choose Photo</label>\n            </div>\n        </div>\n        <div className={classes.button}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                type=\"submit\"\n                text=\"Upload Image\"\n                onSubmit={handle}\n            />\n        </div>\n        </>\n    )\n}\nexport default ChangePicture;\n","/home/ubuntu/client/frontend-aevin/src/components/ChangePicture/ChangePictureNew.js",["247","248","249","250","251","252"],"//TODO The backend profile Picture must return the new url for the image in the response\n//TODO Change the local state to reflect the new Profile Picture\n\nimport React, { useState, useContext, useEffect }from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core'\nimport { Typography } from '@material-ui/core';\n\nimport Button from './../controls/Button';\n\nimport { serverURL } from './../../global'\n\nimport axios from 'axios'\n\nimport UserLoginContext from './../../context/UserLoginContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '250px',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    profilePictureContainer: {\n        width: '150px',\n        height: '150px',\n        borderRadius: '75px'\n    },\n    wrapper: {\n        width: '150px',\n        height: '150px',\n        borderRadius: '75px',\n        overflow: 'hidden'\n    },\n    photo: {\n        width: '150px',\n        height: '150px',\n        borderRadius: '75px',\n    },\n    choosePhoto: {\n        height: \"40px\",\n        width: \"100%\",\n        bottom: \"0\",\n        left: \"50%\",\n        transform: \"translateY(-110%)\",\n        textAlign: \"center\",\n        background:\"rgba(0, 0, 0, 0.7)\" ,\n        color: \"wheat\",\n        lineHeight: \"30px\",\n        fontFamily: \"sans-serif\",\n        fontSize: \"15px\",\n        cursor: \"pointer\",\n        display: \"block\",\n        overflow: 'hidden'\n    },\n    file: {\n        display: 'none'\n    },\n    button: {\n        paddingTop: '20px'\n    }\n}))\n\nconst ChangePictureNew = ({isNew}) => {\n\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    const [imageToUpload, setImageToUpload] = useState(null);\n\n    const [imageSrc, setImageSrc] = useState('https://developers.google.com/web/images/contributors/no-photo.jpg')\n\n    const [imageSrcExt, setImageSrcExt] = useState(null)\n\n    const imageMaxSize = 10000000;\n\n    const { userData } = useContext(UserLoginContext)\n\n    useEffect(() => {\n        if (userData.user){\n            setImageSrc(userData.user.profilePicture)\n        }\n    }, [])\n\n    const verifyFiles = ( files ) => {\n        //TODO rejectedFiles have fileType in currentFile.file.type\n        if( files && files.length > 0 ){\n            const currentFile = files[0];\n            const currentFileType = currentFile.type;\n            const currentFileSize = currentFile.size;\n            console.log(currentFile)\n            if(currentFileSize > imageMaxSize){\n                console.log('too big')\n                alert('The file is too big. Maximum file size is' + imageMaxSize);\n                return false;\n            }\n        }\n        return true;\n    }\n\n    const handleFileUpload = (event) => {\n        if (!imageToUpload) return\n        event.preventDefault()\n        const fd = new FormData();\n        console.log(imageToUpload);\n        fd.append('image', imageToUpload, imageToUpload.name)\n\n        const config = {\n          method: 'post',\n          url:`${serverURL}api/upload/profilePicture`,\n          headers: {\n            'auth-token': userData.token,\n          },\n          data : fd\n        };\n        console.log(fd)\n\n        axios(config)\n            .then(res => {\n\n                if (isNew){\n                    history.goBack();\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    const handleFileSelect = (event) => {\n\n        const files = event.target.files\n        if(files && files.length > 0 ){\n            const isVerified = verifyFiles(files)\n            if( isVerified ){\n                const currentFile = files[0]\n                const myFileItemReader = new FileReader()\n                myFileItemReader.addEventListener('load', () => {\n                    const myResult = myFileItemReader.result;\n                    setImageSrc(myResult);\n                    //setImageSrcExt(extractImageFileExtensionFromBase64(myResult))\n                } , false)\n                myFileItemReader.readAsDataURL(currentFile)\n                setImageToUpload(currentFile);\n            }\n        }\n    }\n\n    return(\n        <>\n            <div className={classes.root}>\n                <div className={classes.profilePictureContainer}>\n                    <div className={classes.wrapper}>\n                        <img src={imageSrc} className={classes.photo} id='photo' />\n                        <label htmlFor=\"file\" className={classes.choosePhoto}>Choose Photo</label>\n                    </div>\n                    <div className={classes.button}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            type=\"submit\"\n                            text=\"Upload Image\"\n                            onClick={(e) => handleFileUpload(e)}\n                        />\n                    </div>\n                    <input type=\"file\" id=\"file\" className={classes.file} onChange={handleFileSelect} />\n                </div>\n            </div>\n        </>\n    )\n}\nexport default ChangePictureNew;\n","/home/ubuntu/client/frontend-aevin/src/components/HomePageView/HomePageView.js",[],"/home/ubuntu/client/frontend-aevin/src/components/TopBar/TopBar.js",[],"/home/ubuntu/client/frontend-aevin/src/components/TopBar/TopBarBackButton.js",["253"],"import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AppBar, Toolbar, Typography, CssBaseline, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport UserLoginContext from './../../context/UserLoginContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        display: 'flex',\n        justifyContent: 'space-around',\n    },\n    appbar: {\n        width: '100vw',\n        maxWidth: '650px',\n        backgroundColor: theme.palette.neutral.light,\n        color: 'grey',\n        boxShadow: 'none',\n        display: 'flex',\n        flexDirection: 'row',\n        height: '70px',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    userPicture: {\n        width: '50px',\n        height: '50px',\n    },\n    name: {\n        fontSize: '1.3rem',\n        fontWeight: '800',\n        letterSpacing: '0.5vw',\n        justifySelf: 'center',\n        color: 'black',\n        marginRight: theme.spacing(2)\n    }\n}));\n\n\nconst TopBarBackButton = ( ) => {\n\n    const { userData } = useContext(UserLoginContext)\n\n    const { profilePicture, name } = userData.user\n\n    const classes = useStyles();\n\n    const history = useHistory();\n\n    const handleBack = () => {\n        history.goBack();\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar className={classes.appbar} position=\"static\">\n                <Toolbar>\n                    <IconButton onClick={() => handleBack()}>\n                        <ArrowBackIosIcon />\n                    </IconButton>\n                </Toolbar>\n                <Typography className={classes.name}>{name.toUpperCase()}</Typography>\n            </AppBar>\n            <CssBaseline />\n        </div>\n    );\n}\n\nexport default TopBarBackButton;\n","/home/ubuntu/client/frontend-aevin/src/components/Links/LinksContainer.js",[],"/home/ubuntu/client/frontend-aevin/src/components/BottomBar/BottomBar.js",[],"/home/ubuntu/client/frontend-aevin/src/components/PostFeed/PostFeed.js",["254","255"],"import React , { useContext }from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport UserLoginContext from './../../context/UserLoginContext'\nimport ViewerLoginContext from './../../context/ViewerLoginContext'\nimport AuthenticatedPost from './../Post/AuthenticatedPost'\n\nconst PostFeed = ({ profilePicture, username, name }) => {\n    const classes= useStyles()\n\n    const { userData, setUserData } = useContext(UserLoginContext)\n\n    const { viewerData, setViewerData } = useContext(ViewerLoginContext)\n\n    const posts = userData.user.posts\n\n    //conditionally render based on authenticated/ unauthenticated user\n    return(\n        <div className={classes.root}>\n            {\n                viewerData.viewer ? ( <div>\n                        {\n\n                            posts ? (\n                                posts.map(post => <AuthenticatedPost key={post.id} post={post}/>)\n                            ) : ('')\n                        }\n                    </div>\n\n                ) : (\n                    <div>\n                        {\n                            posts ? (\n                                posts.map(post => <AuthenticatedPost key={post.id} post={post}/>)\n                            ) : (' This should render Unauthenticated post ')\n                        }\n                    </div>\n                )\n            }\n        </div>\n    )\n}\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        maxWidth: '100%',\n        margin:'0px',\n        padding: '0px',\n        paddingBottom: '45px'\n    }\n}))\nexport default PostFeed;\n","/home/ubuntu/client/frontend-aevin/src/components/ViewerProfile/ViewerProfile.js",["256"],"import { useContext, useState } from 'react'\n\nimport ViewerLoginContext from './../../context/ViewerLoginContext'\n\nimport EditViewerData from './../EditViewerData/EditViewerData'\nimport ViewerLogin from './../LoginForm/ViewerLogin'\nimport ViewerRegister from './../RegisterForm/ViewerRegister'\n\nconst ViewerProfile = () => {\n\n    const { viewerData, setViewerData } = useContext(ViewerLoginContext)\n    const [page, setPage] = useState('0')\n\n    return(\n        <div>\n            {\n                viewerData.viewer ? (\n                    <EditViewerData  />\n                ) : (\n                    page === '0' ? (\n                        <ViewerLogin setPage={setPage}/>\n                    ) : (\n                        <ViewerRegister setPage={setPage}/>\n                    )\n\n                )\n            }\n        </div>\n    )\n}\n\n\nexport default ViewerProfile;\n","/home/ubuntu/client/frontend-aevin/src/components/YoutubeList/YoutubeList.js",["257","258","259"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { serverURL } from './../../global'\n\nimport axios from 'axios'\n\nimport UserLoginContext from './../../context/UserLoginContext'\n\nimport YoutubeVideo from './YoutubeVideo'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n\n    }\n})\n)\n\n\nconst YoutubeList = () => {\n    const classes = useStyles()\n\n    const [ videos, setVideos ] = useState([])\n\n    const { userData } = useContext(UserLoginContext)\n\n    const { youtubeid } =  userData.user\n\n    useEffect(() => {\n        axios.get(serverURL + youtubeid + \"/blog\")\n            .then(res => { setVideos(res.data.thumbnails) })\n            .catch(err => { console.log(err) })\n    }, [])\n\n    console.log(videos)\n\n    return(\n        <div className={classes.root}>\n            {\n                videos.map(video =>\n                    <YoutubeVideo video={video}/>\n                )\n\n            }\n\n        </div>\n    )\n}\n\nexport default YoutubeList;\n","/home/ubuntu/client/frontend-aevin/src/components/Post/AuthenticatedPost.js",["260","261","262","263","264","265"],"//#add content[0] property when you create a post\n\nimport React, { useState, useEffect,  useContext }from 'react';\nimport { useHistory } from 'react-router-dom'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Card, CardHeader, Avatar, CardContent, Typography, CardActions, IconButton, CardMedia } from '@material-ui/core'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\n\nimport axios from 'axios'\n\nimport LikeButton from './LikeButton'\n\nimport UserLoginContext from './../../context/UserLoginContext'\n\nimport ViewerLoginContext from './../../context/ViewerLoginContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        margin: '0px',\n        marginBottom: '3px',\n        justifyContent: 'center',\n        display: 'flex',\n        alignItems: 'center',\n        justifyItems: 'center',\n        width: '100%'\n    },\n    card:{\n        height: 'auto',\n        width: '100%',\n        maxWidth: '650px',\n        boxShadow: 'none',\n        backgroundColor: theme.palette.neutral.light,\n    },\n    caption: {\n        marginTop: '-20px',\n        fontWeight: 800\n    },\n    imageContainer: {\n        width: '100%',\n        height: 'auto'\n    },\n    image: {\n        width: '100%',\n        height: 'auto',\n        borderRadius: '3px'\n    },\n    interactionsContainer: {\n        display: 'flex',\n    },\n    interactions: {\n        display: 'flex'\n    },\n    likeButtonInactive: {\n        color: 'red'\n    },\n    likeButtonActive: {\n        color: 'red'\n    },\n    likeButtonUnauthenticated: {\n        color: 'green'\n    },\n\n}));\n\nconst PostComponentAuthenticated = ({ post, onClick }) => {\n\n    const { userData } = useContext(UserLoginContext)\n\n    const { viewerData } = useContext(ViewerLoginContext)\n\n    const { viewer } = viewerData\n\n    const history = useHistory();\n\n    const [ isLiked, setIsLiked ] = useState()\n\n    let viewerUsername\n\n    if(viewerData.isLoggedIn){\n        viewerUsername = viewer.username\n    }\n\n    const { user } = userData\n\n    const classes = useStyles();\n\n    const handlePostClick = () => {\n        history.push({pathname: \"/post/\"+post.id,\n                    postData: { post }\n                    })\n    }\n\n    return(\n        <div className={classes.root} onClick={handlePostClick}>\n            <Card className={classes.card}>\n                <CardHeader\n                    avatar={\n                        <Avatar src={user.profilePicture}/>\n                    }\n                    title={user.name}\n                    subheader={getDate(post.time)}\n                />\n                <CardContent className={classes.caption}>\n                    <Typography variant=\"body2\" component=\"p\">\n                        {post.content[0].text}\n                    </Typography>\n                </CardContent>\n                <div className={classes.imageContainer}>\n                    <CardMedia>\n                        <img className={classes.image} src={post.content[0].url}></img>\n                    </CardMedia>\n                </div>\n                <CardActions className={classes.interactionsContainer}>\n                    <IconButton className={classes.interactions}>\n                        {\n                            viewerUsername ? (\n                                <LikeButton likes={post.likes} postId={post.id} username={userData.user.username}/>\n                            ) : (\n                                <FavoriteIcon className={classes.likeButtonUnauthenticated}/>\n                            )\n                        }\n\n                    </IconButton>\n                    <IconButton className={classes.interactions}>\n                        <ChatBubbleIcon/>\n                    </IconButton>\n                </CardActions>\n            </Card>\n        </div>\n    )\n}\nconst getDate = ( unixTime ) => {\n    const dateObject = new Date(unixTime)\n    const humanDateFormat = dateObject.toLocaleString(\"en-US\", {day: \"numeric\", month: \"long\", year: 'numeric'})\n    return humanDateFormat\n}\n\nexport default PostComponentAuthenticated;\n","/home/ubuntu/client/frontend-aevin/src/components/Post/AddComment.js",["266","267","268"],"import React, { useState, useEffect, useContext } from 'react'\nimport { TextField, Button, Typography } from '@material-ui/core'\n\nimport ViewerLoginContext from './../../context/ViewerLoginContext'\nimport UserLoginContext from './../../context/UserLoginContext'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport axios from 'axios'\nimport { serverURL } from './../../global'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '98%',\n        padding: theme.spacing(1)\n    },\n    addComment: {\n        width: '100%',\n        paddingBottom: theme.spacing(1)\n    },\n    button: {\n        backgroundColor: theme.palette.secondary.dark,\n        borderRadius: '25px',\n        border: 'none',\n        color: 'white',\n        fontWeight: '600',\n        justifySelf: 'flex-end',\n        alignSelf: 'flex-end',\n        padding: theme.spacing(1),\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main,\n        }\n    }\n}));\n\nconst AddComment = ( { post } ) => {\n\n    const classes = useStyles();\n\n    const { viewerData } = useContext(ViewerLoginContext)\n    const { userData, setUserData } = useContext(UserLoginContext)\n\n    const [ comment, setComment ]= useState('');\n\n    let editData;\n\n    console.log(viewerData.loginSuccess)\n    useEffect(() => {\n\n        if ( viewerData.loginSuccess) {\n            editData = {\n                editData: [{\n                    postID: post.id,\n                    viewerUsername: viewerData.viewer.username,\n                    viewerName: viewerData.viewer.name,\n                    userUsername: userData.user.username,\n                    viewerProfilePicture: viewerData.viewer.profilePicture,\n                    commentData: comment\n                }]\n            }\n        }\n        if ( userData.loginSuccess) {\n            editData = {\n                editData: [{\n                    postID: post.id,\n                    viewerUsername: userData.user.username,\n                    viewerName: userData.user.name,\n                    userUsername: userData.user.username,\n                    viewerProfilePicture: userData.user.profilePicture,\n                    commentData: comment\n                }]\n            }\n        }\n\n    }, [comment])\n\n    const handleCommentPostViewer = () => {\n        if (comment === \"\") return\n\n        const createCommentData = JSON.stringify(editData)\n\n        const config = {\n          method: 'post',\n          url: `${serverURL}api/addComment/?editData=` + createCommentData,\n          headers: {\n            'auth-token-viewer': viewerData.token,\n          },\n        };\n        let index = userData.user.posts.findIndex(posts => posts.id === post.id)\n\n        axios(config)\n            .then(res => {\n                let { posts } = userData.user;\n                posts[index].comments.push({ id: `temp${posts[index].comments.length}`, commentData: comment, userUsername: userData.user.username, viewerUsername: viewerData.viewer.username, viewerName: viewerData.viewer.name })\n                let user = {userData}\n                setUserData({\n                    ...userData,\n                    user: {\n                        ...userData.user,\n                        posts\n                    }\n                })\n                console.log(res)\n            })\n            .catch(err => console.log(err))\n        setComment('')\n    }\n    const handleCommentPostUser = () => {\n        if (comment === \"\") return\n\n        const createCommentData = JSON.stringify(editData)\n\n        const config = {\n          method: 'post',\n          url: `${serverURL}api/addCommentUser/?editData=` + createCommentData,\n          headers: {\n            'auth-token': userData.token,\n          },\n        };\n        let index = userData.user.posts.findIndex(posts => posts.id === post.id)\n\n        axios(config)\n            .then(res => {\n                let { posts } = userData.user;\n                posts[index].comments.push({ id: `temp${posts[index].comments.length}`, commentData: comment, userUsername: userData.user.username, viewerUsername: userData.user.username, viewerName: userData.user.name })\n                let user = {userData}\n                setUserData({\n                    ...userData,\n                    user: {\n                        ...userData.user,\n                        posts\n                    }\n                })\n                console.log(res)\n            })\n            .catch(err => console.log(err))\n        setComment('')\n    }\n\n    const handleCommentChange = (e) => {\n        setComment(e.target.value)\n        console.log(e.target.value)\n    }\n\n\n    return(\n        <div className={classes.root}>\n            <TextField value={comment} className={classes.addComment} variant='outlined' onChange={(e) => handleCommentChange(e)}/>\n\n            {\n                userData.loginSuccess ?\n                    (\n                        <Button onClick={handleCommentPostUser} variant='outlined' size='small'  className={classes.button} color=\"inherit\">\n                            <Typography className={classes.text}>\n                                Post\n                            </Typography>\n                        </Button>\n\n                    )\n                    :\n                    (\"\")\n\n            }\n            {\n                viewerData.loginSuccess ?\n                    (\n                        <Button onClick={handleCommentPostViewer} variant='outlined' size='small'  className={classes.button} color=\"inherit\">\n                            <Typography className={classes.text}>\n                                Post\n                            </Typography>\n                        </Button>\n\n                    )\n                    :\n                    (\"\")\n\n            }\n        </div>\n    )\n}\n\nexport default AddComment\n","/home/ubuntu/client/frontend-aevin/src/components/Post/CommentSection.js",[],"/home/ubuntu/client/frontend-aevin/src/components/controls/Button.js",[],"/home/ubuntu/client/frontend-aevin/src/context/HomePageContext.js",[],"/home/ubuntu/client/frontend-aevin/src/components/YoutubeList/YoutubeVideo.js",["269","270","271","272","273","274"],"import React, { useEffect } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea, CardMedia, CardContent, Icon,  Typography } from '@material-ui/core'\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n    },\n    media: {\n\n    },\n    card: {\n        width: '98%',\n        boxShadow: 'none',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: theme.spacing(1)\n    },\n    image: {\n        width: '100%'\n    },\n    imageOverlay:{\n        width: '100%',\n    },\n    playButton:{\n        position: 'absolute',\n        transform: '(2.5%)'\n    }\n\n\n})\n)\n\nconst YoutubeVideo = ({ video }) => {\n\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <Card className={classes.card}>\n                <div className={classes.imageOverlay}>\n                    <img className={classes.image} src={video.thumbnail} alt='youtube video thumbnail' ></img>\n                </div>\n                    <Typography >\n                        { video.title }\n                    </Typography>\n            </Card>\n        </div>\n    )\n\n}\n\nexport default YoutubeVideo;\n","/home/ubuntu/client/frontend-aevin/src/components/Post/LikeButton.js",["275","276","277","278"],"import { useContext, useState } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { IconButton } from '@material-ui/core'\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nimport ViewerLoginContext from './../../context/ViewerLoginContext'\n\nimport axios from 'axios'\nimport { serverURL } from './../../global'\n\nconst useStyles = makeStyles(theme => ({\n\n    liked:{\n        marginTop: '5px',\n        color: 'red'\n    },\n    notLiked: {\n        marginTop: '5px',\n        color: 'black'\n    }\n\n}));\n\nconst LikeButton = ({ likes, postId, username }) => {\n\n    const classes = useStyles()\n\n    const [ isLiked, setIsLiked ] = useState(false)\n\n    const { viewerData } = useContext(ViewerLoginContext)\n\n    //check if viewer has liked the post\n\n    let liked;\n\n    if (viewerData){\n        liked = likes.find( likeObj => likeObj.viewerObj === viewerData.viewer.username )\n    }\n\n    const handleLiked = async(e) => {\n        e.stopPropagation()\n\n        const editData = {\n                editData: [{\n                    postID: postId,\n                    viewerUsername: viewerData.viewer.username,\n                    viewerName: viewerData.viewer.name,\n                    userUsername: username\n                }]\n        }\n        const createLikeData = JSON.stringify(editData)\n\n        const res = await callLikeAPI(createLikeData, viewerData.token)\n    }\n\n    return(\n        <div>\n            {\n                liked ? (\n                    <FavoriteIcon className={classes.liked}/>\n                ) : (\n                    <FavoriteIcon className={classes.notLiked} onClick={handleLiked}/>\n                )\n            }\n        </div>\n    )\n}\nconst callLikeAPI = async (createLikeData, token) => {\n    const config = {\n      method: 'post',\n      url: `${serverURL}` + createLikeData,\n      headers: {\n        'auth-token-viewer': token,\n      },\n    };\n\n    return axios(config)\n        .then(() => console.log('liked') )\n        .catch(() => console.log('like failed'))\n\n}\n\nexport default LikeButton\n","/home/ubuntu/client/frontend-aevin/src/components/Post/Comment.js",[],"/home/ubuntu/client/frontend-aevin/src/components/RegisterForm/ViewerRegister.js",["279","280","281","282","283","284","285","286"],"import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core'\nimport { Typography, Grid } from '@material-ui/core'\n\nimport { useForm, Form } from './../useForm/useForm'\nimport Input from './../controls/Input'\nimport Button from './../controls/Button'\n\nimport HomePageContext from './../../context/HomePageContext'\nimport ViewerLoginContext from './../../context/ViewerLoginContext'\n\nimport axios from 'axios'\nimport { serverURL } from './../../global'\n\nconst useStyles = makeStyles( theme => ({\n   form: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    formItems: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        maxWidth: '700px'\n    },\n    login: {\n        color: theme.palette.secondary.main,\n        cursor: 'pointer',\n    },\n    inputFields:{\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100vw',\n        justifyContent: 'center',\n        margin: theme.spacing(2),\n        alignItems: 'center',\n    },\n    haveAccount:{\n        margin: theme.spacing(2),\n\n    }\n}))\n\nconst initialFValues = {\n    name: '',\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n}\n\nconst RegisterForm = ({ setPage }) => {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const { viewerData, setViewerData } = useContext(ViewerLoginContext)\n\n    const { registerState, setRegisterState } = useState({\n        loading: null,\n        user: null,\n        error: null\n    })\n    const validate = () => {\n        let temp = {}\n\n        temp.name = values.name? \"\" : \"Name is required\"\n        temp.name = values.name.length > 5 ? \"\" : \"Name must have minimum length of 6 characters\"\n\n        temp.email = (/.+@.+..+/).test(values.email)? \"\" : \"Email is invalid\"\n\n        temp.username = values.username ? \"\" : \"This field is required\"\n        temp.username = values.username.length > 5 ? \"\" : \"Username must have minimum length of 6 characters\"\n\n        temp.password = values.password ? \"\" :  \"This field is required\"\n        temp.password = values.password.length > 6 ?  \"\"  : \"Password must be greater than 6 characters\"\n\n        temp.confirmPassword = values.confirmPassword ? \"\" :  \"This field is required\"\n        temp.confirmPassword = values.password === values.confirmPassword ? \"\" : \"Passwords do not match\"\n        setErrors({\n            ...temp\n        })\n        return Object.values(temp).every(x => x === \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        if(validate()){\n            const ViewerData = await callRegisterAPI(values.name, values.username, values.email, values.password)\n            setViewerData(ViewerData);\n        }\n    }\n\n    return(\n        <Form onSubmit={handleSubmit}>\n            <Grid container className={classes.form}>\n                <Grid item className={classes.formItems}>\n                    <div className={classes.inputFields}>\n                        <Input\n                            label='Name'\n                            name='name'\n                            type='text'\n                            error={errors.name}\n                            value={values.name}\n                            onChange={handleInputChange}\n                        />\n                        <Input\n                            label='Username'\n                            name='username'\n                            type='text'\n                            error={errors.username}\n                            value={values.username}\n                            onChange={handleInputChange}\n                        />\n                        <Input\n                            label='Email'\n                            name='email'\n                            type='email'\n                            error={errors.email}\n                            value={values.email}\n                            onChange={handleInputChange}\n                        />\n                        <Input\n                            label='Password'\n                            name='password'\n                            type='password'\n                            error={errors.password}\n                            value={values.password}\n                            onChange={handleInputChange}\n                        />\n                        <Input\n                            label='Confirm Password'\n                            name='confirmPassword'\n                            type='password'\n                            error={errors.confirmPassword}\n                            value={values.confirmPassword}\n                            onChange={handleInputChange}\n                        />\n                    </div>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        type=\"submit\"\n                        text=\"Register\"\n                        onSubmit={handleSubmit}\n                    />\n                    <Typography className={classes.haveAccount}>Have an account? <span className={classes.login} onClick={ () => setPage('0') }>Login Here </span> </Typography>\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n\nconst callRegisterAPI = async ( name, username, email, password ) => {\n    let data = JSON.stringify({\n        email: email,\n        password: password,\n        name: name,\n        username: username,\n        }\n    )\n    var registerAPI = {\n        method: 'post',\n        url: `${serverURL}api/user/viewer/register`,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data : data\n    };\n    return axios(registerAPI)\n        .then( res => {\n            localStorage.setItem('auth-token-viewer', res.data.token)\n            const viewerData = {\n                viewer: res.data.viewer,\n                token: res.data.token,\n                loginSuccess: res.data.loginSuccess\n            }\n            return viewerData;\n        })\n        .catch( error => {\n            return error\n        });\n\n}\nexport default RegisterForm;\n","/home/ubuntu/client/frontend-aevin/src/components/Links/Link.js",["287"],"import React from 'react';\n\nimport { Paper, Typography } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles( theme => ({\n    link: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '70px',\n        maxWidth: '70px',\n        height: '100%',\n        padding: '5px',\n        backgroundColor: theme.palette.neutral.light,\n        margin: '0',\n    },\n    linkIcon: {\n        width: '30px',\n        height: '30px',\n        borderRadius: '10px',\n        marginBottom: '2px'\n    },\n    linkName: {\n        fontSize: '12px',\n        fontWeight: '600',\n        margin: '0',\n        maxWidth: '100%',\n        overflow: 'hidden',\n        marginRight: '0',\n    }\n}))\n\nconst Link = ({ name, link, image, isAffiliate }) => {\n\n    const classes = useStyles()\n\n    return(\n            <Paper elevation={0} className={classes.link}>\n                <a href={link}>\n                    <img className={classes.linkIcon} src={image}/>\n                </a>\n                <Typography className={classes.linkName}>{name}</Typography>\n                <div className={classes.affiliate}>\n                    {\n                        isAffiliate ?\n                            ('') : ('')\n                    }\n                </div>\n            </Paper>\n    )\n}\n\nexport default Link;\n","/home/ubuntu/client/frontend-aevin/src/components/LoginForm/ViewerLogin.js",["288","289"],"import React, { useContext } from 'react';\nimport { Grid, makeStyles, Typography } from '@material-ui/core'\n\nimport { useForm, Form } from './../useForm/useForm'\nimport Input from './../controls/Input'\nimport Button from './../controls/Button'\n\nimport HomePageContext from './../../context/HomePageContext'\nimport ViewerLoginContext from './../../context/ViewerLoginContext'\n\nimport axios from 'axios'\nimport { serverURL } from './../../global'\n\nconst useStyles = makeStyles( theme => ({\n    form: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    formItems: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100vw',\n        maxWidth: '700px',\n    },\n    register: {\n        color: theme.palette.secondary.main,\n        cursor: 'pointer'\n    },\n    inputFields:{\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        justifyContent: 'center',\n        margin: theme.spacing(2),\n        alignItems: 'center',\n    },\n    noAccount: { margin: theme.spacing(2),\n    }\n}))\n\nconst initialFValues = {\n    email: '',\n    password: '',\n}\n\nconst ViewerLogin = ({ setPage }) => {\n    const { setViewerData } = useContext(ViewerLoginContext)\n\n    const classes = useStyles();\n\n    const validate = () => {\n        let temp = {}\n\n        temp.email = (/.+@.+..+/).test(values.email)? \"\" : \"Email is invalid\"\n\n        temp.password = values.password ? \"\" :  \"This field is required\"\n        temp.password = values.password.length > 6 ?  \"\"  : \"Password must be greater than 6 characters\"\n\n        setErrors({\n            ...temp\n        })\n        return Object.values(temp).every(x => x === \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        if(validate()){\n            const viewerData = await callLoginAPI(values.email, values.password);\n            setViewerData(viewerData);\n            resetForm();\n        }\n    }\n    return(\n        <Form onSubmit={handleSubmit}>\n            <Grid container className={classes.form}>\n                <Grid item className={classes.formItems}>\n                    <div className={classes.inputFields}>\n                        <Input\n                            label='Email'\n                            name='email'\n                            type='email'\n                            error={errors.email}\n                            value={values.email}\n                            onChange={handleInputChange}\n                            fullWidth\n                        />\n                    <Input\n                        label='Password'\n                        name='password'\n                        type='password'\n                        error={errors.password}\n                        value={values.password}\n                        onChange={handleInputChange}\n                        fullWidth\n                    />\n                    </div>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        type=\"submit\"\n                        text=\"Login\"\n                        onSubmit={ handleSubmit }\n                    />\n                    <Typography className={classes.noAccount}>Don't have an account? <span className={classes.register} onClick={ () => setPage(1) }>Register Here </span> </Typography>\n                    <br/>\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n\nconst callLoginAPI = async ( email, password ) => {\n    const data = JSON.stringify({\n        email,\n        password\n    });\n    const loginAPI = {\n        method: 'post',\n        url: `${serverURL}api/user/viewer/login`,\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        data: data\n    }\n    return axios(loginAPI)\n        .then( res => {\n            localStorage.setItem('auth-token-viewer', res.data.token)\n            const viewerData = {\n                viewer: res.data.viewer,\n                token: res.data.token,\n                loginSuccess: res.data.loginSuccess\n            }\n            return viewerData;\n        })\n        .catch( error => {\n            return error\n        });\n}\n\nexport default ViewerLogin\n","/home/ubuntu/client/frontend-aevin/src/components/EditViewerData/EditViewerData.js",["290"],"import { useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ViewerLoginContext from './../../context/ViewerLoginContext'\nimport ChangePictureViewer from './../ChangePicture/ChangePictureViewer'\n\nimport Input from './../controls/Input'\nimport Button from './../controls/Button'\n\nimport axios from 'axios'\nimport { serverURL } from './../../global'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100vw',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    heading: {\n        fontSize: '16px',\n        fontWeight: '600',\n        padding: theme.spacing(2),\n    },\n    picture: {\n        width: '100%',\n        height: '100%',\n    },\n    formItems: {\n        width : '80%',\n        padding: theme.spacing(2),\n    },\n    formButton:{\n        padding:theme.spacing(2)\n    }\n}))\n\nconst EditViewerData = () => {\n\n    const history = useHistory();\n\n    const classes = useStyles()\n\n    const { viewerData, setViewerData } = useContext(ViewerLoginContext);\n\n    const [ name, setName ] = useState(viewerData.viewer.name);\n\n    const [ didDataChangeName, setDidDataChangeName ] = useState(false)\n\n    const handleDataChangeName = (e) => {\n        setDidDataChangeName(true);\n        setName(e.target.value)\n    }\n\n    const handleNameSubmit = () => {\n\n        if (!didDataChangeName) return\n\n        const config = {\n          method: 'post',\n          url: serverURL + \"api/edit/name?editData=\\\"\" + name + \"\\\"\" ,\n          headers: {\n            'auth-token-viewer': viewerData.token,\n          },\n        };\n\n        axios(config)\n            .then(() => {\n                setViewerData({\n                    ...viewerData,\n                    viewer: {\n                        ...viewerData.viewer,\n                        name: name\n                    }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    const handleSubmit = () => {\n        if (didDataChangeName){\n            handleNameSubmit()\n        }\n    }\n\n    const handleTest = () => {\n        history.push('/edit/changeProfilePicture')\n    }\n\n    const logoutViewer = () => {\n        localStorage.setItem('auth-token-viewer', '')\n        setViewerData({\n            token: null,\n            viewer: null,\n            loginSuccess: null\n        })\n    }\n\n    return(\n        <div className={classes.root}>\n                <div className={classes.heading}>\n                    CHANGE PICTURE\n                </div>\n                <ChangePictureViewer />\n            <div className={classes.heading}>\n                BASIC INFORMATION\n            </div>\n            <div className={classes.formItems}>\n                <Input\n                    label='Name'\n                    name='name'\n                    type='text'\n                    value={name}\n                    onChange={(e) => handleDataChangeName(e)}\n                />\n            </div>\n            <div className={classes.formButton}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    text=\"Update Name\"\n                    onClick={handleSubmit}\n                />\n            </div>\n            <div>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    text=\"Logout\"\n                    onClick={logoutViewer}\n                />\n\n            </div>\n        </div>\n\n    )\n}\nexport default EditViewerData;\n","/home/ubuntu/client/frontend-aevin/src/pages/UserPage.js",["291","292","293"],"import UserLoginContext from './../context/UserLoginContext'\n\nimport { useState } from 'react'\n\nimport PostFeed from './../components/PostFeed/PostFeed'\nimport TopBar from './../components/TopBar/TopBar'\nimport NewPost from './../components/NewPost/NewPost'\nimport BottomBar from './../components/BottomBar/BottomBar'\nimport LinksContainer from './../components/Links/LinksContainer'\nimport EditUserData from './../components/EditUserData/EditUserData'\nimport YoutubeList from './../components/YoutubeList/YoutubeList'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { serverURL } from './../global'\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles( theme => ({\n    root: {\n        width: '100%',\n    }\n}))\n\nconst UserPage = () => {\n    const classes = useStyles()\n\n    const [tab, setTab] = useState(0);\n\n    const renderView = () => {\n        switch(tab){\n            case 0:\n                //if viewerData then return interactable else return login popup on interaction page\n                return (\n                    <>\n                        <LinksContainer />\n                        <NewPost />\n                        <PostFeed />\n                    </>\n                )\n            case 1:\n                return <YoutubeList />\n            case 2:\n                return <EditUserData />\n            default:\n                return new Error('This does not exist');\n        }\n    }\n\n    return(\n        <div className={classes.root}>\n            <TopBar />\n            {\n                renderView()\n            }\n            <BottomBar value={tab} onChange={setTab} />\n        </div>\n    )\n}\n\nexport default UserPage;\n","/home/ubuntu/client/frontend-aevin/src/components/LandingPageView/LandingPageView.js",["294"],"import React, { useState, useContext } from 'react'\n\nimport HomePageContext from './../../context/HomePageContext'\n\nimport Landing from './../Landing/Landing'\nimport RegisterForm from './../RegisterForm/RegisterForm'\nimport LoginForm from './../LoginForm/LoginForm'\n\nconst LandingPageView = () => {\n    const { page } = useContext(HomePageContext)\n    const renderView = () => {\n        switch( page ){\n            case '0':\n                return <Landing />\n            case '1':\n                return <RegisterForm />\n            case '2':\n                return <LoginForm />\n            default:\n                return <Landing />\n        }\n    }\n    return(\n        <div>\n            {\n                renderView()\n            }\n        </div>\n    )\n}\n\n\nexport default LandingPageView;\n","/home/ubuntu/client/frontend-aevin/src/components/NavBar/NavBar.js",["295"],"import React, { useContext } from 'react'\nimport { AppBar, Toolbar, Typography, Button, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core'\n\nimport HomePageContext from './../../context/HomePageContext'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n      marginRight: theme.spacing(3),\n      marginLeft: theme.spacing(-5),\n      overflow: 'hidden',\n      maxHeight: '80px',\n\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appbar: {\n      backgroundColor: theme.palette.neutral.light,\n      color: 'grey',\n      boxShadow: 'none'\n  },\n    logo:{\n        maxHeight: '175px',\n        width: 'auto',\n    },\n    button:{\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.neutral.light,\n        borderRadius: '25px',\n        minWidth: '75px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main,\n        }\n    }\n}));\n\nconst NavBar = ( ) => {\n\n    const { setPage } = useContext(HomePageContext)\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n          <AppBar className={classes.appbar} position=\"static\">\n            <Toolbar>\n                <IconButton onClick={ () => setPage('0')} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                  <img  className={classes.logo} src='https://res.cloudinary.com/companyofmine/image/upload/v1608577364/logo_transparent_u7ihve.png'></img>\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n              </Typography>\n                <Button onClick={ () => setPage('2') } size='large' variant='outlined' className={classes.button} color=\"inherit\">Login</Button>\n            </Toolbar>\n          </AppBar>\n        </div>\n    );\n}\n\nexport default NavBar;\n","/home/ubuntu/client/frontend-aevin/src/components/controls/Input.js",[],"/home/ubuntu/client/frontend-aevin/src/components/ChangePicture/ChangePictureViewer.js",["296","297","298","299","300","301"],"//TODO The backend profile Picture must return the new url for the image in the response\n//TODO Change the local state to reflect the new Profile Picture\n\nimport React, { useState, useContext, useEffect }from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core'\nimport { Typography } from '@material-ui/core';\n\nimport Button from './../controls/Button';\n\nimport { serverURL } from './../../global'\n\nimport axios from 'axios'\n\nimport ViewerLoginContext from './../../context/ViewerLoginContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '250px',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    profilePictureContainer: {\n        width: '150px',\n        height: '150px',\n        borderRadius: '75px'\n    },\n    wrapper: {\n        width: '150px',\n        height: '150px',\n        borderRadius: '75px',\n        overflow: 'hidden'\n    },\n    photo: {\n        width: '150px',\n        height: '150px',\n        borderRadius: '75px',\n    },\n    choosePhoto: {\n        height: \"40px\",\n        width: \"100%\",\n        bottom: \"0\",\n        left: \"50%\",\n        transform: \"translateY(-110%)\",\n        textAlign: \"center\",\n        background:\"rgba(0, 0, 0, 0.7)\" ,\n        color: \"wheat\",\n        lineHeight: \"30px\",\n        fontFamily: \"sans-serif\",\n        fontSize: \"15px\",\n        cursor: \"pointer\",\n        display: \"block\",\n        overflow: 'hidden'\n    },\n    file: {\n        display: 'none'\n    },\n    button: {\n        paddingTop: '20px'\n    }\n}))\n\nconst ChangePictureViewer = ({isNew}) => {\n\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    const [imageToUpload, setImageToUpload] = useState(null);\n\n    const [imageSrc, setImageSrc] = useState('https://developers.google.com/web/images/contributors/no-photo.jpg')\n\n    const [imageSrcExt, setImageSrcExt] = useState(null)\n\n    const imageMaxSize = 10000000;\n\n    const { viewerData } = useContext(ViewerLoginContext)\n\n    useEffect(() => {\n        if (viewerData.viewer !== undefined){\n            console.log(viewerData.viewer.profilePicture)\n            //setImageSrc(viewerData.viewer.profilePicture)\n        }\n    }, [])\n\n    const verifyFiles = ( files ) => {\n        //TODO rejectedFiles have fileType in currentFile.file.type\n        if( files && files.length > 0 ){\n            const currentFile = files[0];\n            const currentFileType = currentFile.type;\n            const currentFileSize = currentFile.size;\n            console.log(currentFile)\n            if(currentFileSize > imageMaxSize){\n                console.log('too big')\n                alert('The file is too big. Maximum file size is' + imageMaxSize);\n                return false;\n            }\n        }\n        return true;\n    }\n\n    const handleFileUpload = (event) => {\n        if (!imageToUpload) return\n        event.preventDefault()\n        const fd = new FormData();\n        console.log(imageToUpload);\n        fd.append('image', imageToUpload, imageToUpload.name)\n\n        const config = {\n          method: 'post',\n          url:`${serverURL}api/upload/profilePicture`,\n          headers: {\n            'auth-token': viewerData.token,\n          },\n          data : fd\n        };\n        console.log(fd)\n\n        axios(config)\n            .then(res => {\n\n                if (isNew){\n                    history.goBack();\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    const handleFileSelect = (event) => {\n\n        const files = event.target.files\n        if(files && files.length > 0 ){\n            const isVerified = verifyFiles(files)\n            if( isVerified ){\n                const currentFile = files[0]\n                const myFileItemReader = new FileReader()\n                myFileItemReader.addEventListener('load', () => {\n                    const myResult = myFileItemReader.result;\n                    setImageSrc(myResult);\n                    //setImageSrcExt(extractImageFileExtensionFromBase64(myResult))\n                } , false)\n                myFileItemReader.readAsDataURL(currentFile)\n                setImageToUpload(currentFile);\n            }\n        }\n    }\n\n    return(\n        <>\n            <div className={classes.root}>\n                <div className={classes.profilePictureContainer}>\n                    <div className={classes.wrapper}>\n                        <img src={imageSrc} className={classes.photo} id='photo' />\n                        <label htmlFor=\"file\" className={classes.choosePhoto}>Choose Photo</label>\n                    </div>\n                    <div className={classes.button}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            type=\"submit\"\n                            text=\"Upload Image\"\n                            onClick={(e) => handleFileUpload(e)}\n                        />\n                    </div>\n                    <input type=\"file\" id=\"file\" className={classes.file} onChange={handleFileSelect} />\n                </div>\n            </div>\n        </>\n    )\n}\nexport default ChangePictureViewer;\n","/home/ubuntu/client/frontend-aevin/src/components/useForm/useForm.js",[],"/home/ubuntu/client/frontend-aevin/src/components/EditUserData/EditUserData.js",["302","303"],"import { useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport UserLoginContext from './../../context/UserLoginContext'\nimport ChangePicture from './../ChangePicture/ChangePicture'\nimport ChangePictureNew from './../ChangePicture/ChangePictureNew'\n\nimport Input from './../controls/Input'\nimport Button from './../controls/Button'\nimport EditLinkData from './EditLinkData'\n\nimport axios from 'axios'\nimport { serverURL } from './../../global'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    heading: {\n        fontSize: '16px',\n        fontWeight: '600',\n        padding: theme.spacing(2),\n    },\n    picture: {\n        width: '100%',\n        height: '100%',\n    },\n    formItems: {\n        width : '80%',\n        padding: theme.spacing(2),\n    },\n    formButton:{\n        padding:theme.spacing(2)\n    }\n}))\n\nconst EditUserData = () => {\n\n    const history = useHistory();\n\n    const classes = useStyles()\n\n    const { userData, setUserData } = useContext(UserLoginContext);\n\n    const [ name, setName ] = useState(userData.user.name);\n\n    const [ youtubeId, setYoutubeId ] =useState(userData.user.youtubeId);\n\n    const [ didDataChangeName, setDidDataChangeName ] = useState(false)\n\n    const [ didDataChangeYT, setDidDataChangeYT ] = useState(false)\n\n    const handleDataChangeName = (e) => {\n        setDidDataChangeName(true);\n        setName(e.target.value)\n    }\n\n    const handleDataChangeYT = (e) => {\n        setYoutubeId(e.target.value)\n        setDidDataChangeYT(true);\n    }\n\n    const handleYTSubmit = () => {\n        if (!didDataChangeYT) return\n\n        const config = {\n          method: 'post',\n          url: serverURL + \"api/edit/youtubeid?editData=\\\"\" + youtubeId + \"\\\"\" ,\n          headers: {\n            'auth-token': userData.token,\n          },\n        };\n\n        axios(config)\n            .then(() => {\n                setUserData({\n                    ...userData,\n                    user: {\n                        ...userData.user,\n                        youtubeId: youtubeId\n                    }\n                })\n            })\n            .catch(err => console.log(err))\n\n    }\n    const handleNameSubmit = () => {\n\n        if (!didDataChangeName) return\n\n        const config = {\n          method: 'post',\n          url: serverURL + \"api/edit/name?editData=\\\"\" + name + \"\\\"\" ,\n          headers: {\n            'auth-token': userData.token,\n          },\n        };\n\n        axios(config)\n            .then(() => {\n                setUserData({\n                    ...userData,\n                    user: {\n                        ...userData.user,\n                        name: name\n                    }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    const handleSubmit = () => {\n        if (didDataChangeYT){\n            handleYTSubmit()\n        }\n        if (didDataChangeName){\n            handleNameSubmit()\n        }\n    }\n\n    const handleLogout = () => {\n        localStorage.setItem('auth-token', '')\n        setUserData({\n            token: null,\n            user: null,\n            loginSuccess: null\n        })\n    }\n\n    const handleTest = () => {\n        history.push('/edit/changeProfilePicture')\n    }\n\n    return(\n        <div className={classes.root}>\n                <div className={classes.heading}>\n                    CHANGE PICTURE\n                </div>\n                <ChangePictureNew />\n            <div className={classes.heading}>\n                BASIC INFORMATION\n            </div>\n            <div className={classes.formItems}>\n                <Input\n                    label='Name'\n                    name='name'\n                    type='text'\n                    value={name}\n                    onChange={(e) => handleDataChangeName(e)}\n                />\n            </div>\n            <div className={classes.formItems}>\n                <Input\n                    label='Youtube Id'\n                    name='name'\n                    type='text'\n                    value={youtubeId}\n                    onChange={e => handleDataChangeYT(e)}\n                />\n            </div>\n            <div className={classes.formButton}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    text=\"Update Information\"\n                    onClick={handleSubmit}\n                />\n            </div>\n            <EditLinkData />\n            <div className={classes.formButton}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    text=\"LOGOUT\"\n                    onClick={handleLogout}\n                />\n            </div>\n            <br />\n            <br />\n            <br />\n        </div>\n\n    )\n}\nexport default EditUserData;\n","/home/ubuntu/client/frontend-aevin/src/components/NewPost/NewPost.js",["304","305"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Button, makeStyles } from '@material-ui/core'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        display: 'flex',\n        justifyContent: 'center'\n    },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n    file:{\n        display: 'none'\n    },\n    uploadButton: {\n        borderRadius: '20px',\n        padding: '10px',\n        fontWeight: 800,\n        fontSize: '15px',\n        backgroundColor: theme.palette.secondary.main,\n        color: '#fff'\n    }\n}));\n\nconst CreatePostButton = () => {\n\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    const handleFileSelect = (e) => {\n        //redirect to post page with\n\n        const selectedFile = e.target.files[0]\n\n        if(selectedFile) {\n            history.push({pathname: '/edit/createPost',\n                selectedFile: selectedFile\n            })\n        }\n    }\n\n    return (\n       <div className={classes.root}>\n            <input type=\"file\" id=\"file\" className={classes.file} onChange={handleFileSelect} />\n            <label htmlFor=\"file\" className={classes.uploadButton}>CREATE POST</label>\n        </div>\n    )\n}\n\nexport default CreatePostButton;\n","/home/ubuntu/client/frontend-aevin/src/components/LoginForm/LoginForm.js",["306"],"import React, { useContext } from 'react';\nimport { Grid, makeStyles, Typography } from '@material-ui/core'\n\nimport { useForm, Form } from './../useForm/useForm'\nimport Input from './../controls/Input'\nimport Button from './../controls/Button'\n\nimport HomePageContext from './../../context/HomePageContext'\nimport UserLoginContext from './../../context/UserLoginContext'\n\nimport axios from 'axios'\nimport { serverURL } from './../../global'\n\nconst useStyles = makeStyles( theme => ({\n    form: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    formItems: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        maxWidth: '700px'\n    },\n    register: {\n        color: theme.palette.secondary.main,\n        cursor: 'pointer'\n    }\n}))\n\nconst initialFValues = {\n    email: '',\n    password: '',\n}\n\nconst LoginForm = () => {\n    const { setPage } = useContext(HomePageContext)\n    const { setUserData } = useContext(UserLoginContext)\n\n    const classes = useStyles();\n\n    const validate = () => {\n        let temp = {}\n\n        temp.email = (/.+@.+..+/).test(values.email)? \"\" : \"Email is invalid\"\n\n        temp.password = values.password ? \"\" :  \"This field is required\"\n        temp.password = values.password.length > 6 ?  \"\"  : \"Password must be greater than 6 characters\"\n\n        setErrors({\n            ...temp\n        })\n        return Object.values(temp).every(x => x === \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        if(validate()){\n            const userData = await callLoginAPI(values.email, values.password);\n            setUserData(userData);\n            resetForm();\n        }\n    }\n    return(\n        <Form onSubmit={handleSubmit}>\n            <Grid container className={classes.form}>\n                <Grid item className={classes.formItems}>\n                    <Input\n                        label='Email'\n                        name='email'\n                        type='email'\n                        error={errors.email}\n                        value={values.email}\n                        onChange={handleInputChange}\n                    />\n                    <Input\n                        label='Password'\n                        name='password'\n                        type='password'\n                        error={errors.password}\n                        value={values.password}\n                        onChange={handleInputChange}\n                    />\n                    <br/>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        type=\"submit\"\n                        text=\"Login\"\n                        onSubmit={ handleSubmit }\n                    />\n                    <br/>\n                    <Typography>Don't have an account? <span className={classes.register} onClick={ () => setPage('1') }>Register Here </span> </Typography>\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n\nconst callLoginAPI = async ( email, password ) => {\n    const data = JSON.stringify({\n        email,\n        password\n    });\n    const loginAPI = {\n        method: 'post',\n        url: `${serverURL}api/user/login`,\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        data: data\n    }\n    return axios(loginAPI)\n        .then( res => {\n            localStorage.setItem('auth-token', res.data.token)\n            const userData = {\n                user: res.data.user,\n                token: res.data.token,\n                loginSuccess: res.data.loginSuccess\n            }\n            return userData;\n        })\n        .catch( error => {\n            return error\n        });\n}\n\nexport default LoginForm;\n","/home/ubuntu/client/frontend-aevin/src/components/RegisterForm/RegisterForm.js",["307","308","309","310","311","312","313"],"import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Grid, makeStyles } from '@material-ui/core'\n\nimport { useForm, Form } from './../useForm/useForm'\nimport Input from './../controls/Input'\nimport Button from './../controls/Button'\n\nimport HomePageContext from './../../context/HomePageContext'\nimport UserLoginContext from './../../context/UserLoginContext'\n\nimport axios from 'axios'\nimport { serverURL } from './../../global'\n\nconst useStyles = makeStyles( theme => ({\n   form: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    formItems: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        maxWidth: '700px'\n    },\n}))\n\nconst initialFValues = {\n    name: '',\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n}\n\nconst RegisterForm = () => {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const { userData, setUserData } = useContext(UserLoginContext)\n\n    const { registerState, setRegisterState } = useState({\n        loading: null,\n        user: null,\n        error: null\n    })\n    const validate = () => {\n        let temp = {}\n\n        temp.name = values.name? \"\" : \"Name is required\"\n        temp.name = values.name.length > 5 ? \"\" : \"Name must have minimum length of 6 characters\"\n\n        temp.email = (/.+@.+..+/).test(values.email)? \"\" : \"Email is invalid\"\n\n        temp.username = values.username ? \"\" : \"This field is required\"\n        temp.username = values.username.length > 5 ? \"\" : \"Username must have minimum length of 6 characters\"\n\n        temp.password = values.password ? \"\" :  \"This field is required\"\n        temp.password = values.password.length > 6 ?  \"\"  : \"Password must be greater than 6 characters\"\n\n        temp.confirmPassword = values.confirmPassword ? \"\" :  \"This field is required\"\n        temp.confirmPassword = values.password === values.confirmPassword ? \"\" : \"Passwords do not match\"\n        setErrors({\n            ...temp\n        })\n        return Object.values(temp).every(x => x === \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        if(validate()){\n            const userData = await callRegisterAPI(values.name, values.username, values.email, values.password)\n            setUserData(userData);\n            history.push('/edit/changeProfilePicture')\n        }\n    }\n\n    return(\n        <Form onSubmit={handleSubmit}>\n            <Grid container className={classes.form}>\n                <Grid item className={classes.formItems}>\n                    <Input\n                        label='Name'\n                        name='name'\n                        type='text'\n                        error={errors.name}\n                        value={values.name}\n                        onChange={handleInputChange}\n                    />\n                    <Input\n                        label='Username'\n                        name='username'\n                        type='text'\n                        error={errors.username}\n                        value={values.username}\n                        onChange={handleInputChange}\n                    />\n                    <Input\n                        label='Email'\n                        name='email'\n                        type='email'\n                        error={errors.email}\n                        value={values.email}\n                        onChange={handleInputChange}\n                    />\n                    <Input\n                        label='Password'\n                        name='password'\n                        type='password'\n                        error={errors.password}\n                        value={values.password}\n                        onChange={handleInputChange}\n                    />\n                    <Input\n                        label='Confirm Password'\n                        name='confirmPassword'\n                        type='password'\n                        error={errors.confirmPassword}\n                        value={values.confirmPassword}\n                        onChange={handleInputChange}\n                    />\n                    <br/>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        type=\"submit\"\n                        text=\"Register\"\n                        onSubmit={handleSubmit}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n\nconst callRegisterAPI = async ( name, username, email, password ) => {\n    let data = JSON.stringify({\n        email: email,\n        password: password,\n        name: name,\n        username: username,\n        youtubeid: undefined,\n        instagramid: undefined,\n        links: [],\n        posts: []\n        }\n    )\n    var registerAPI = {\n        method: 'post',\n        url: `${serverURL}api/user/register`,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data : data\n    };\n    return axios(registerAPI)\n        .then( res => {\n            localStorage.setItem('auth-token', res.data.token)\n            const userData = {\n                user: res.data.user,\n                token: res.data.token,\n                loginSuccess: res.data.loginSuccess\n            }\n            return userData;\n        })\n        .catch( error => {\n            return error\n        });\n\n}\nexport default RegisterForm;\n","/home/ubuntu/client/frontend-aevin/src/components/Landing/Landing.js",[],"/home/ubuntu/client/frontend-aevin/src/components/EditUserData/EditLinkData.js",["314","315","316","317","318","319","320"],"import { useContext, useState } from 'react'\nimport Input from './../controls/Input'\nimport Button from './../controls/Button'\n\nimport UserLoginContext from './../../context/UserLoginContext'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    link:{\n        padding: theme.spacing(2),\n        width: '80%'\n    },\n    linkName:{\n        padding: theme.spacing(1),\n        width: '100%'\n\n    },\n    linkURL: {\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    heading: {\n        fontSize: '16px',\n        fontWeight: '600',\n        padding: theme.spacing(2),\n    },\n    formButton:{\n        padding:theme.spacing(2),\n    }\n}))\n\nconst EditLinkData = () => {\n\n    const classes = useStyles()\n\n    const { userData, setUserData } = useContext(UserLoginContext);\n\n    const [ links, setLinks ] = useState(userData.user.links);\n\n    const [link1, setLink1] = useState(userData.user.links[0])\n    const [link2, setLink2] = useState(userData.user.links[1])\n    const [link3, setLink3] = useState(userData.user.links[2])\n    const [link4, setLink4] = useState(userData.user.links[3])\n    const [link5, setLink5] = useState(userData.user.links[4])\n    const [link6, setLink6] = useState(userData.user.links[5])\n\n    const [linksArray, setLinksArray] = useState([link1, link2, link3, link4, link5, link6])\n    console.log(linksArray)\n\n    const [ didLinksChange, setDidLinksChange ] = useState(userData.user.links);\n\n    const dummyArray = [1, 2, 3, 4, 5, ];\n\n    let dummyArray2 = []\n\n    let length = dummyArray.length - userData.user.links.length\n\n    for(let i = 0; i < length; i++){\n        dummyArray2.push(0)\n    }\n\n    console.log(dummyArray2);\n\n    const handleSubmit = () => {\n        console.log('hi')\n    }\n\n    const handleChangeURL = (e, index) => {\n        switch(index){\n            case 1:\n                setLink1({\n                    ...link1,\n                        linkURL: e.target.value\n                })\n                setLinksArray([link1, link2, link3, link4, link5])\n                break;\n            case 2:\n                setLink2({\n                    ...link2,\n                        linkURL: e.target.value\n                })\n                setLinksArray([link1, link2, link3, link4, link5])\n                break;\n            case 3:\n                setLink3({\n                    ...link3,\n                        linkURL: e.target.value\n                })\n                setLinksArray([link1, link2, link3, link4, link5])\n                break;\n            case 4:\n                setLink4({\n                    ...link4,\n                        linkURL: e.target.value\n                })\n                setLinksArray([link1, link2, link3, link4, link5])\n                break;\n            case 5:\n                setLink5({\n                    ...link5,\n                        linkURL: e.target.value\n                })\n                setLinksArray([link1, link2, link3, link4, link5])\n                break;\n            default:\n                console.log(6)\n                break;\n        }\n        setLinksArray([link1, link2, link3, link4, link5])\n    }\n\n    const handleChangeName = (e, index) => {\n        switch(index){\n            case 1:\n                setLink1({\n                    ...link1,\n                        linkName: e.target.value\n                })\n                break;\n            case 2:\n                setLink2({\n                    ...link2,\n                        linkName: e.target.value\n                })\n                break;\n            case 3:\n                setLink3({\n                    ...link3,\n                        linkName: e.target.value\n                })\n                break;\n            case 4:\n                setLink4({\n                    ...link4,\n                        linkName: e.target.value\n                })\n                setLinksArray([link1, link2, link3, link4, link5])\n            case 5:\n                setLink5({\n                    ...link5,\n                        linkName: e.target.value\n                })\n                break;\n            default:\n                console.log(6)\n                break;\n        }\n        setLinksArray([link1, link2, link3, link4, link5])\n    }\n    return(\n        <div className={classes.root}>\n            <div className={classes.heading}>\n               LINKS\n            </div>\n            {\n                userData.user.links.map((element, index) =>\n                    <div key={index} className={classes.link}>\n                        <div className={classes.linkName}>\n                            <Input\n                                label={`Link ${index + 1} Name`}\n                                name='name'\n                                type='text'\n                                value={linksArray[index].name}\n                                fullWidth\n                                onChange={e => handleChangeName(e, index+1)}\n                            />\n                        </div>\n                        <div className={classes.linkURL}>\n                            <Input\n                                className={classes.linkURL}\n                                label={`Link ${index + 1} URL`}\n                                name='name'\n                                type='text'\n                                value={linksArray[index].linkURL}\n                                fullWidth\n                                onChange={e => handleChangeURL(e, index+1)}\n                            />\n                        </div>\n                    </div>\n                )\n            }\n            {\n                dummyArray2.map((element, index) =>\n                    <div key={index} className={classes.link}>\n                        <div className={classes.linkName}>\n                            <Input\n                                label={`Link ${index + userData.user.links.length + 1} Name`}\n                                name='name'\n                                type='text'\n                                value=\"\"\n                                fullWidth\n                                onChange={e => handleChangeName(e, index+1+userData.user.links.length)}\n                            />\n                        </div>\n                        <div className={classes.linkURL}>\n                            <Input\n                                className={classes.linkURL}\n                                label={`Link ${index + userData.user.links.length + 1} URL`}\n                                name='name'\n                                type='text'\n                                value=\"\"\n                                fullWidth\n                                onChange={e => handleChangeURL(e, index+1+userData.user.links.length)}\n                            />\n                        </div>\n                    </div>\n                )\n            }\n            <div className={classes.formButton}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    text=\"Update Links\"\n                    onClick={handleSubmit}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default EditLinkData;\n",["321","322"],"/home/ubuntu/client/frontend-aevin/src/components/PhoneImage/PhoneImage.js",["323","324"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles( theme => ({\n    imageContainer: {\n        width: '100%',\n        minWidth:'320px',\n        maxWidth: '400px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        height: 'auto',\n        margin: theme.spacing(2)\n    }\n}))\n\nconst PhoneImage = () => {\n    const classes = useStyles();\n    return(\n        <div>\n            <div className={classes.imageContainer}>\n                <img className={classes.image} src=\"https://assets.stickpng.com/images/580b57fbd9996e24bc43bf87.png\"></img>\n            </div>\n        </div>\n    )\n}\nexport default PhoneImage;\n","/home/ubuntu/client/frontend-aevin/src/components/IntroText/IntroText.js",[],"/home/ubuntu/client/frontend-aevin/src/components/CallToAction/CallToAction.js",[],{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","severity":1,"message":"330","line":8,"column":8,"nodeType":"331","messageId":"332","endLine":8,"endColumn":21},{"ruleId":"329","severity":1,"message":"333","line":11,"column":40,"nodeType":"331","messageId":"332","endLine":11,"endColumn":51},{"ruleId":"334","severity":1,"message":"335","line":86,"column":8,"nodeType":"336","endLine":86,"endColumn":10,"suggestions":"337"},{"ruleId":"329","severity":1,"message":"338","line":88,"column":11,"nodeType":"331","messageId":"332","endLine":88,"endColumn":18},{"ruleId":"329","severity":1,"message":"339","line":5,"column":8,"nodeType":"331","messageId":"332","endLine":5,"endColumn":15},{"ruleId":"334","severity":1,"message":"340","line":45,"column":8,"nodeType":"336","endLine":45,"endColumn":10,"suggestions":"341"},{"ruleId":"329","severity":1,"message":"342","line":48,"column":23,"nodeType":"331","messageId":"332","endLine":48,"endColumn":34},{"ruleId":"334","severity":1,"message":"343","line":70,"column":8,"nodeType":"336","endLine":70,"endColumn":10,"suggestions":"344"},{"ruleId":"329","severity":1,"message":"345","line":89,"column":19,"nodeType":"331","messageId":"332","endLine":89,"endColumn":24},{"ruleId":"334","severity":1,"message":"346","line":57,"column":8,"nodeType":"336","endLine":57,"endColumn":10,"suggestions":"347"},{"ruleId":"348","severity":1,"message":"349","line":77,"column":13,"nodeType":"350","endLine":77,"endColumn":128},{"ruleId":"329","severity":1,"message":"351","line":3,"column":10,"nodeType":"331","messageId":"332","endLine":3,"endColumn":20},{"ruleId":"329","severity":1,"message":"352","line":30,"column":11,"nodeType":"331","messageId":"332","endLine":30,"endColumn":32},{"ruleId":"329","severity":1,"message":"353","line":3,"column":10,"nodeType":"331","messageId":"332","endLine":3,"endColumn":20},{"ruleId":"348","severity":1,"message":"349","line":88,"column":17,"nodeType":"350","endLine":88,"endColumn":76},{"ruleId":"329","severity":1,"message":"353","line":7,"column":10,"nodeType":"331","messageId":"332","endLine":7,"endColumn":20},{"ruleId":"329","severity":1,"message":"354","line":73,"column":12,"nodeType":"331","messageId":"332","endLine":73,"endColumn":23},{"ruleId":"329","severity":1,"message":"355","line":73,"column":25,"nodeType":"331","messageId":"332","endLine":73,"endColumn":39},{"ruleId":"334","severity":1,"message":"356","line":83,"column":8,"nodeType":"336","endLine":83,"endColumn":10,"suggestions":"357"},{"ruleId":"329","severity":1,"message":"358","line":89,"column":19,"nodeType":"331","messageId":"332","endLine":89,"endColumn":34},{"ruleId":"348","severity":1,"message":"349","line":152,"column":25,"nodeType":"350","endLine":152,"endColumn":84},{"ruleId":"329","severity":1,"message":"359","line":46,"column":13,"nodeType":"331","messageId":"332","endLine":46,"endColumn":27},{"ruleId":"329","severity":1,"message":"342","line":10,"column":23,"nodeType":"331","messageId":"332","endLine":10,"endColumn":34},{"ruleId":"329","severity":1,"message":"360","line":12,"column":25,"nodeType":"331","messageId":"332","endLine":12,"endColumn":38},{"ruleId":"329","severity":1,"message":"360","line":11,"column":25,"nodeType":"331","messageId":"332","endLine":11,"endColumn":38},{"ruleId":"329","severity":1,"message":"361","line":2,"column":10,"nodeType":"331","messageId":"332","endLine":2,"endColumn":14},{"ruleId":"329","severity":1,"message":"353","line":2,"column":16,"nodeType":"331","messageId":"332","endLine":2,"endColumn":26},{"ruleId":"334","severity":1,"message":"362","line":34,"column":8,"nodeType":"336","endLine":34,"endColumn":10,"suggestions":"363"},{"ruleId":"329","severity":1,"message":"364","line":3,"column":27,"nodeType":"331","messageId":"332","endLine":3,"endColumn":36},{"ruleId":"329","severity":1,"message":"365","line":12,"column":8,"nodeType":"331","messageId":"332","endLine":12,"endColumn":13},{"ruleId":"366","severity":1,"message":"367","line":26,"column":9,"nodeType":"368","messageId":"369","endLine":26,"endColumn":16},{"ruleId":"329","severity":1,"message":"370","line":79,"column":13,"nodeType":"331","messageId":"332","endLine":79,"endColumn":20},{"ruleId":"329","severity":1,"message":"371","line":79,"column":22,"nodeType":"331","messageId":"332","endLine":79,"endColumn":32},{"ruleId":"348","severity":1,"message":"349","line":114,"column":25,"nodeType":"350","endLine":114,"endColumn":82},{"ruleId":"334","severity":1,"message":"372","line":53,"column":24,"nodeType":"368","endLine":62,"endColumn":14},{"ruleId":"329","severity":1,"message":"373","line":97,"column":21,"nodeType":"331","messageId":"332","endLine":97,"endColumn":25},{"ruleId":"329","severity":1,"message":"373","line":128,"column":21,"nodeType":"331","messageId":"332","endLine":128,"endColumn":25},{"ruleId":"329","severity":1,"message":"364","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":26},{"ruleId":"329","severity":1,"message":"374","line":4,"column":16,"nodeType":"331","messageId":"332","endLine":4,"endColumn":30},{"ruleId":"329","severity":1,"message":"375","line":4,"column":32,"nodeType":"331","messageId":"332","endLine":4,"endColumn":41},{"ruleId":"329","severity":1,"message":"376","line":4,"column":43,"nodeType":"331","messageId":"332","endLine":4,"endColumn":54},{"ruleId":"329","severity":1,"message":"377","line":4,"column":56,"nodeType":"331","messageId":"332","endLine":4,"endColumn":60},{"ruleId":"329","severity":1,"message":"378","line":5,"column":8,"nodeType":"331","messageId":"332","endLine":5,"endColumn":28},{"ruleId":"329","severity":1,"message":"351","line":5,"column":10,"nodeType":"331","messageId":"332","endLine":5,"endColumn":20},{"ruleId":"329","severity":1,"message":"370","line":31,"column":13,"nodeType":"331","messageId":"332","endLine":31,"endColumn":20},{"ruleId":"329","severity":1,"message":"371","line":31,"column":22,"nodeType":"331","messageId":"332","endLine":31,"endColumn":32},{"ruleId":"329","severity":1,"message":"379","line":56,"column":15,"nodeType":"331","messageId":"332","endLine":56,"endColumn":18},{"ruleId":"329","severity":1,"message":"364","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":26},{"ruleId":"329","severity":1,"message":"380","line":10,"column":8,"nodeType":"331","messageId":"332","endLine":10,"endColumn":23},{"ruleId":"329","severity":1,"message":"381","line":58,"column":11,"nodeType":"331","messageId":"332","endLine":58,"endColumn":18},{"ruleId":"329","severity":1,"message":"382","line":59,"column":13,"nodeType":"331","messageId":"332","endLine":59,"endColumn":23},{"ruleId":"329","severity":1,"message":"383","line":61,"column":13,"nodeType":"331","messageId":"332","endLine":61,"endColumn":26},{"ruleId":"329","severity":1,"message":"384","line":61,"column":28,"nodeType":"331","messageId":"332","endLine":61,"endColumn":44},{"ruleId":"329","severity":1,"message":"385","line":90,"column":9,"nodeType":"331","messageId":"332","endLine":90,"endColumn":18},{"ruleId":"329","severity":1,"message":"386","line":94,"column":9,"nodeType":"331","messageId":"332","endLine":94,"endColumn":18},{"ruleId":"348","severity":1,"message":"349","line":43,"column":21,"nodeType":"350","endLine":43,"endColumn":68},{"ruleId":"329","severity":1,"message":"380","line":8,"column":8,"nodeType":"331","messageId":"332","endLine":8,"endColumn":23},{"ruleId":"329","severity":1,"message":"385","line":69,"column":9,"nodeType":"331","messageId":"332","endLine":69,"endColumn":18},{"ruleId":"329","severity":1,"message":"387","line":88,"column":11,"nodeType":"331","messageId":"332","endLine":88,"endColumn":21},{"ruleId":"329","severity":1,"message":"388","line":1,"column":8,"nodeType":"331","messageId":"332","endLine":1,"endColumn":24},{"ruleId":"329","severity":1,"message":"389","line":15,"column":10,"nodeType":"331","messageId":"332","endLine":15,"endColumn":19},{"ruleId":"329","severity":1,"message":"365","line":17,"column":8,"nodeType":"331","messageId":"332","endLine":17,"endColumn":13},{"ruleId":"329","severity":1,"message":"390","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":25},{"ruleId":"348","severity":1,"message":"349","line":51,"column":19,"nodeType":"350","endLine":51,"endColumn":150},{"ruleId":"329","severity":1,"message":"353","line":7,"column":10,"nodeType":"331","messageId":"332","endLine":7,"endColumn":20},{"ruleId":"329","severity":1,"message":"354","line":73,"column":12,"nodeType":"331","messageId":"332","endLine":73,"endColumn":23},{"ruleId":"329","severity":1,"message":"355","line":73,"column":25,"nodeType":"331","messageId":"332","endLine":73,"endColumn":39},{"ruleId":"334","severity":1,"message":"391","line":84,"column":8,"nodeType":"336","endLine":84,"endColumn":10,"suggestions":"392"},{"ruleId":"329","severity":1,"message":"358","line":90,"column":19,"nodeType":"331","messageId":"332","endLine":90,"endColumn":34},{"ruleId":"348","severity":1,"message":"349","line":153,"column":25,"nodeType":"350","endLine":153,"endColumn":84},{"ruleId":"329","severity":1,"message":"330","line":6,"column":8,"nodeType":"331","messageId":"332","endLine":6,"endColumn":21},{"ruleId":"329","severity":1,"message":"387","line":135,"column":11,"nodeType":"331","messageId":"332","endLine":135,"endColumn":21},{"ruleId":"329","severity":1,"message":"393","line":3,"column":10,"nodeType":"331","messageId":"332","endLine":3,"endColumn":16},{"ruleId":"329","severity":1,"message":"394","line":4,"column":8,"nodeType":"331","messageId":"332","endLine":4,"endColumn":23},{"ruleId":"329","severity":1,"message":"385","line":60,"column":9,"nodeType":"331","messageId":"332","endLine":60,"endColumn":18},{"ruleId":"329","severity":1,"message":"364","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":26},{"ruleId":"329","severity":1,"message":"380","line":9,"column":8,"nodeType":"331","messageId":"332","endLine":9,"endColumn":23},{"ruleId":"329","severity":1,"message":"395","line":42,"column":13,"nodeType":"331","messageId":"332","endLine":42,"endColumn":21},{"ruleId":"329","severity":1,"message":"383","line":44,"column":13,"nodeType":"331","messageId":"332","endLine":44,"endColumn":26},{"ruleId":"329","severity":1,"message":"384","line":44,"column":28,"nodeType":"331","messageId":"332","endLine":44,"endColumn":44},{"ruleId":"329","severity":1,"message":"385","line":73,"column":9,"nodeType":"331","messageId":"332","endLine":73,"endColumn":18},{"ruleId":"329","severity":1,"message":"386","line":77,"column":9,"nodeType":"331","messageId":"332","endLine":77,"endColumn":18},{"ruleId":"329","severity":1,"message":"342","line":44,"column":23,"nodeType":"331","messageId":"332","endLine":44,"endColumn":34},{"ruleId":"329","severity":1,"message":"396","line":46,"column":13,"nodeType":"331","messageId":"332","endLine":46,"endColumn":18},{"ruleId":"329","severity":1,"message":"397","line":46,"column":20,"nodeType":"331","messageId":"332","endLine":46,"endColumn":28},{"ruleId":"329","severity":1,"message":"398","line":53,"column":19,"nodeType":"331","messageId":"332","endLine":53,"endColumn":27},{"ruleId":"329","severity":1,"message":"399","line":58,"column":13,"nodeType":"331","messageId":"332","endLine":58,"endColumn":27},{"ruleId":"329","severity":1,"message":"400","line":58,"column":29,"nodeType":"331","messageId":"332","endLine":58,"endColumn":46},{"ruleId":"401","severity":1,"message":"402","line":146,"column":13,"nodeType":"403","messageId":"404","endLine":151,"endColumn":23},{"ruleId":"325","replacedBy":"405"},{"ruleId":"327","replacedBy":"406"},{"ruleId":"366","severity":1,"message":"407","line":17,"column":9,"nodeType":"368","messageId":"369","endLine":17,"endColumn":15},{"ruleId":"348","severity":1,"message":"349","line":27,"column":17,"nodeType":"350","endLine":27,"endColumn":118},"no-native-reassign",["408"],"no-negated-in-lhs",["409"],"no-unused-vars","'ChangePicture' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["410"],"'classes' is assigned a value but never used.","'Landing' is defined but never used.","React Hook useEffect has missing dependencies: 'setUserData', 'userData', and 'usernameParam'. Either include them or remove the dependency array.",["411"],"'setUserData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'location.selectedFile'. Either include them or remove the dependency array.",["412"],"'posts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'selectedFile'. Either include them or remove the dependency array.",["413"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IconButton' is defined but never used.","'handleBackButtonClick' is assigned a value but never used.","'Typography' is defined but never used.","'imageSrcExt' is assigned a value but never used.","'setImageSrcExt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userData.user'. Either include it or remove the dependency array.",["414"],"'currentFileType' is assigned a value but never used.","'profilePicture' is assigned a value but never used.","'setViewerData' is assigned a value but never used.","'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'youtubeid'. Either include it or remove the dependency array.",["415"],"'useEffect' is defined but never used.","'axios' is defined but never used.","no-dupe-keys","Duplicate key 'display'.","ObjectExpression","unexpected","'isLiked' is assigned a value but never used.","'setIsLiked' is assigned a value but never used.","Assignments to the 'editData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'user' is assigned a value but never used.","'CardActionArea' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'Icon' is defined but never used.","'PlayCircleFilledIcon' is defined but never used.","'res' is assigned a value but never used.","'HomePageContext' is defined but never used.","'history' is assigned a value but never used.","'viewerData' is assigned a value but never used.","'registerState' is assigned a value but never used.","'setRegisterState' is assigned a value but never used.","'setValues' is assigned a value but never used.","'resetForm' is assigned a value but never used.","'handleTest' is assigned a value but never used.","'UserLoginContext' is defined but never used.","'serverURL' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'viewerData.viewer'. Either include it or remove the dependency array.",["416"],"'Button' is defined but never used.","'CloudUploadIcon' is defined but never used.","'userData' is assigned a value but never used.","'links' is assigned a value but never used.","'setLinks' is assigned a value but never used.","'setLink6' is assigned a value but never used.","'didLinksChange' is assigned a value but never used.","'setDidLinksChange' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",["408"],["409"],"Duplicate key 'height'.","no-global-assign","no-unsafe-negation",{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},"Update the dependencies array to be: [url]",{"range":"431","text":"432"},"Update the dependencies array to be: [setUserData, userData, usernameParam]",{"range":"433","text":"434"},"Update the dependencies array to be: [history, location.selectedFile]",{"range":"435","text":"436"},"Update the dependencies array to be: [history, selectedFile]",{"range":"437","text":"438"},"Update the dependencies array to be: [userData.user]",{"range":"439","text":"440"},"Update the dependencies array to be: [youtubeid]",{"range":"441","text":"442"},"Update the dependencies array to be: [viewerData.viewer]",{"range":"443","text":"444"},[2276,2278],"[url]",[1263,1265],"[setUserData, userData, usernameParam]",[1675,1677],"[history, location.selectedFile]",[1258,1260],"[history, selectedFile]",[2100,2102],"[userData.user]",[815,817],"[youtubeid]",[2193,2195],"[viewerData.viewer]"]