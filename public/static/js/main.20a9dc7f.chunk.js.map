{"version":3,"sources":["global.js","context/UserContext.js","context/ViewerContext.js","components/LandingPage/LandingPage.js","components/Register/UserRegister.js","components/Login/UserLogin.js","pages/AppHomePage.js","components/LinkComponent.js","components/Links.js","components/PostComponent.js","components/PostComponentAuthenticated.js","components/Posts.js","components/CreatePostButton.js","pages/Home.js","components/BlogPage/YtVideoComponent.js","components/BlogPage/YtVideos.js","pages/Blog.js","pages/EditProfilePage.js","components/BotNav.js","components/Topnav.js","pages/UserHomePage.js","pages/AuthHomePage.js","utils/cropUtils.js","pages/CreatePostPage.js","pages/ChangeProfilePicturePage.js","pages/ChangeLinksPage.js","pages/UserHome.js","pages/EditViewerProfilePage.js","pages/ViewerLoginRegister.js","pages/ViewerPage.js","pages/ProfilePage.js","pages/PostExpand.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","serverURL","UserContext","createContext","ViewerContext","LandingPage","useStyles","makeStyles","theme","root","margin","alignItems","justifyContent","textField","width","form","UserRegister","classes","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","name","setName","username","setUsername","history","useHistory","setUserData","useContext","className","TextField","required","id","label","onChange","e","target","value","type","autoComplete","console","log","Button","onClick","Error","includes","data","JSON","stringify","youtubeid","undefined","instagramid","links","posts","regConfig","method","url","headers","axios","then","response","user","logData","logConfig","res","localStorage","setItem","token","push","catch","err","error","login","UserLogin","config","pageRoot","display","height","padding","appbar","logo","buttons","justifySelf","AppHomePage","page","setPage","ButtonChange","currentTarget","AppBar","position","Toolbar","Typography","variant","color","renderView","CssBaseline","link","textAlign","marginTop","affiliate","linkImgContainer","maxHeight","maxWidth","borderRadius","linkImage","linkText","overflow","textOverflow","fontSize","LinkComponent","href","linkURL","Paper","elevation","src","alt","isAffiliate","linksContainer","marginBottom","boxShadow","Links","length","map","profileAvatar","objectFit","container","test","lineHeight","marginLeft","marginRight","fontWeight","time","caption","postImage","profilePictureContainer","interactionsContainer","interactions","ProfilePicture","profilePicture","Avatar","Name","align","Time","Caption","PostImage","image","LikeButton","post","stopPropagation","handleLikeEvent","CommentButton","PostComponent","unixTime","pathname","postData","Grid","item","Date","toLocaleString","day","month","year","content","text","style","alignSelf","commentProfileAvatar","viewerData","liked","setLiked","editData","postID","viewerUsername","viewer","viewerName","userUsername","createLikeData","comment","useEffect","commentData","PostComponentAuthenticated","Posts","CreatePostButton","backgroundColor","Home","thumbnailContainer","thumbnailImg","videoTitleContainer","videoTitle","VideoTitle","title","Thumbnail","imageURL","YtVideoComponent","thumbnail","linkContainer","YtVideos","youtubeVideos","setYoutubeVideos","get","thumbnails","video","Blog","editPicture","EditProfilePicture","EditYoutubeId","youtubeId","setYoutubeId","userData","EditProfilePage","setViewerData","trigger","window","location","reload","botnav","bottom","icons","BotNav","BottomNavigation","tab","BottomNavigationAction","icon","VideoLibrary","AccountCircle","letterSpacing","profileImage","Topnav","toUpperCase","containerStyles","background","UserHomePage","setTab","direction","AuthHomePage","extractImageFileExtensionFromBase64","base64Data","substring","indexOf","image64toCanvasRef","canvasRef","image64","pixelCrop","canvas","ctx","getContext","Image","onload","drawImage","x","y","CreatePostPage","imageToUpload","setImageToUpload","imageSrc","setImageSrc","setImageSrcExt","aspect","crop","setCrop","setCaption","imagePreviewCanvasRef","React","createRef","fileInputRef","imageMaxSize","verifyFiles","files","currentFile","currentFileSize","size","alert","handleClearToDefault","event","preventDefault","current","clearRect","ref","accept","multiple","myFileItemReader","FileReader","addEventListener","myResult","result","readAsDataURL","onImageLoaded","onComplete","fd","FormData","append","createPostData","onDrop","rejectedFiles","maxSize","getRootProps","getInputProps","input","opacity","zIndex","inputLabel","flexDirection","actionButtons","ChangeProfilePicturePage","for","goBack","ChangeLinksPage","link1name","useRef","setLinks","data-key","defaultValue","helperText","fullWidth","EditViewerProfilePage","LoginRegister","Login","Register","snackbar","setSnackbar","register","ViewerLoginRegister","ViewerPage","UserHome","ProfilePage","usernameParam","useParams","setProfilePicture","setPosts","setYoutubeid","a","commentName","commentDataContainer","wordWrap","commentContainer","CommentProfilePicture","commentProfilePicture","commentUsername","CommentName","CommentData","PostExpand","useLocation","setComment","multiline","handleCommentChange","handleCommentEvent","comments","xs","App","checkLoggedIn","getItem","tokenRes","valid","userObj","checkViewerLoggedIn","viewerObj","Provider","exact","path","component","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","light","blueGrey","main","dark","secondary","lightGreen","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.20a9dc7f.chunk.js","sourcesContent":["module.exports = {\n    serverURL : \"https://aevin.app:8443/\"\n}\n","import { createContext } from 'react';\n\nconst UserContext = createContext(null);\n\nexport default UserContext;\n","import { createContext } from 'react';\n\nconst ViewerContext = createContext(null);\n\nexport default ViewerContext;\n","import React from 'react'\n\nconst LandingPage = () => (\n    <div>\n        hi\n    </div>\n)\nexport default LandingPage;\n","import React, { useState, useContext} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\nimport axios from 'axios';\n\nimport UserContext from './../../context/UserContext';\nimport { serverURL } from './../../global'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst UserRegister = () => {\n\n    const classes = useStyles();\n\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const [ confirmPassword, setConfirmPassword ] = useState('');\n    const [ name, setName ] = useState('');\n    const [ username, setUsername ] = useState('');\n\n    const history = useHistory();\n    const { setUserData } = useContext(UserContext);\n\n    const submit = () => {\n        if (password !== confirmPassword ) return(new Error('passwords dont match'))\n        if (username.includes(' ')) return(new Error('username can not have spaces '))\n\n        let data = JSON.stringify({\n            email: email,\n            password: password,\n            name: name,\n            username: username,\n            youtubeid: undefined,\n            instagramid: undefined,\n            links: [],\n            posts: []\n            }\n        )\n\n        let regConfig = {\n            method: 'post',\n            url: `${serverURL}api/user/register`,\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            data : data\n        };\n\n        axios(regConfig)\n            .then((response) => {\n                //login the user\n                if (!response.data.user) return\n\n                let logData = JSON.stringify({\n                    email: email,\n                    password: password\n                    }\n                )\n                let logConfig = {\n                    method: 'post',\n                    url: `${serverURL}api/user/login`,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    data : logData\n                };\n\n                axios(logConfig)\n                    .then((res) => {\n                        localStorage.setItem('auth-token', res.data.token)\n                        setUserData({\n                            token: res.data.token,\n                            user: res.data.user,\n                        })\n                        history.push('/edit/changeProfilePicture')\n                    })\n                    .catch((err) => console.log(err))\n\n\n                console.log(JSON.stringify(response.data));\n        })\n            .catch((error)=> {\n          console.log(error);\n        });\n    }\n\n    return(\n        <div className={classes.root}>\n            <form className={classes.form}>\n                <TextField\n                    required\n                    className={ classes.textField }\n                    id=\"standard-required-email\"\n                    label=\"Email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <br/>\n                <TextField\n                    required\n                    id=\"standard-password-input\"\n                    label=\"Password\"\n                    className={ classes.textField }\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <br />\n                <TextField\n                    required\n                    id=\"standard-password-confirm-input\"\n                    label=\"Confirm Password\"\n                    className={ classes.textField }\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n                <br/>\n                <TextField\n                    required\n                    id=\"name-standard-required\"\n                    label=\"Name\"\n                    className={ classes.textField }\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <br/>\n                <TextField\n                    required\n                    id=\"username-standard-required\"\n                    label=\"Username (no spaces)\"\n                    className={ classes.textField }\n                    onChange={(e) => {\n                        setUsername(e.target.value)\n                        console.log(username)\n                    }}\n                />\n                <br/>\n                <br/>\n                <Button onClick={submit}> Register </Button>\n\n            </form>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    root:{\n        margin: '80px',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    textField:{\n        width: '250'\n    },\n    form:{\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n})\n)\n\nexport default UserRegister\n","import React, { useState, useContext } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport { serverURL } from './../../global'\nimport { makeStyles } from '@material-ui/core/styles';\nimport UserContext from './../../context/UserContext';\n\nconst UserLogin = () => {\n    const classes = useStyles();\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword] = useState('');\n\n    const { setUserData } = useContext(UserContext);\n    //submit function will setUserData to user Object\n    const submit = () => {\n\n        let data = JSON.stringify({\n            email: email,\n            password: password\n            }\n        )\n        let config = {\n          method: 'post',\n          url: `${serverURL}api/user/login`,\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data : data\n        };\n        axios(config)\n            .then((res) => {\n                localStorage.setItem('auth-token', res.data.token)\n                setUserData({\n                    token: res.data.token,\n                    user: res.data.user,\n                })\n            })\n            .catch((err) => console.log(err))\n    }\n    return(\n        <div className={classes.login}>\n            <form>\n                <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <br/>\n                <TextField\n                    required\n                    id=\"standard-password-input\"\n                    label=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <br/>\n                <br/>\n                <Button onClick={submit}>Login</Button>\n            </form>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    login:{\n        margin: '10px'\n    },\n})\n)\n\nexport default UserLogin\n","//Libraries\nimport React, { useState, useContext } from 'react';\nimport { AppBar, Toolbar, Button, CssBaseline, TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LandingPage from './../components/LandingPage/LandingPage'\nimport UserContext from './../context/UserContext'\nimport UserRegister from  './../components/Register/UserRegister'\nimport UserLogin from  './../components/Login/UserLogin'\nimport { serverURL } from './../global'\nimport axios from 'axios'\n\nconst AppHomePage = () => {\n    const classes = useStyles();\n\n    const [page, setPage] = useState(0);\n\n    const renderView = () => {\n        switch(page){\n            case '0':\n                return <LandingPage/>\n            case '1':\n                return <UserRegister />\n            case '2':\n                return <UserLogin />\n            default:\n                return <LandingPage />\n        }\n    }\n\n    const ButtonChange = (e) => {\n        setPage(e.currentTarget.value);\n    }\n\n    return(\n        <div>\n            <AppBar className={classes.root} position='static' >\n                <Toolbar className={classes.appbar}>\n                    <Typography className={classes.logo}> LOGO </Typography>\n                    <Typography className={classes.logo}> </Typography>\n                    <Typography className={classes.logo}> </Typography>\n                    <Typography className={classes.logo}> </Typography>\n                    <Typography className={classes.logo}> </Typography>\n                    <Typography className={classes.logo}> </Typography>\n                    <Typography className={classes.logo}> </Typography>\n                    <Typography className={classes.logo}> </Typography>\n                    <Typography className={classes.logo}> </Typography>\n                    <Button className={classes.buttons} value={1} variant=\"contained\" color=\"primary\" onClick={ButtonChange}>\n                        Register\n                    </Button>\n                    <Button className={classes.buttons} value={2} variant=\"contained\" color=\"primary\" onClick={ButtonChange}>\n                        Login\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <div>\n                { renderView() }\n            </div>\n            <CssBaseline />\n        </div>\n    )\n}\nconst Page = ({classes}) => {\n    return(\n        <div className={classes.pageRoot}>\n            aevin\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageRoot: {\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n        padding: '10px'\n    },\n    appbar:{\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '10px'\n    },\n    logo:{\n    },\n    buttons:{\n        margin: '10px',\n        justifySelf: 'flex-end'\n    },\n})\n)\n\nexport default AppHomePage;\n","import React from 'react';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst LinkComponent = ( {link} ) => {\n    const classes = useStyles();\n    return(\n        <div key={ link.id } className={classes.link}>\n                <a href={link.linkURL}>\n                    <Paper className={classes.linkImgContainer} elevation={16}>\n                        <img className={classes.linkImage} src={link.url} alt='link'></img>\n                    </Paper>\n                </a>\n                <p className={classes.linkText}>{link.name} <br/>\n                {\n                    link.isAffiliate ? <span className={classes.affiliate}>Affiliate</span> : \"\"\n                }\n                </p>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        height: '100%',\n        textAlign: 'center',\n        marginTop:'-3px'\n    },\n    affiliate: {\n        color: 'grey'\n    },\n    linkImgContainer: {\n        height: '12vw',\n        maxHeight: '64px',\n        padding: '5px',\n        width: '12vw',\n        maxWidth: '64px',\n        margin: '7px',\n        borderRadius: '7vw',\n    },\n    linkImage: {\n        maxHeight: '100%',\n        maxWidth: '100%',\n        borderRadius: '50%'\n    },\n    linkText:{\n        maxWidth: '100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipses',\n        fontSize: '12px',\n        margin: '7px',\n    }\n\n}))\n\nexport default LinkComponent;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinkComponent from './LinkComponent'\n\n\nconst Links = ({ links }) => {\n    const classes = useStyles();\n    return(\n      <div className={classes.root}>\n            <div className={classes.linksContainer}>\n                {\n                    links.length > 0 ? (\n                        links.map(link => {\n                            return(\n                                <LinkComponent key={link.id} link={link}/>\n                            )\n                        })\n\n                    ) : ( \"Add links from the profile section\" )\n                }\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: '100vw',\n        overflow: 'hidden',\n        marginTop : '10px',\n        justifyContent: 'center',\n\n    },\n    linksContainer: {\n        display:'flex',\n        height: '25vw',\n        maxHeight: '105px',\n        width: '100%',\n        justifyContent: 'space-evenly',\n        marginBottom: '10px',\n        textAlign: 'center',\n        boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.1)',\n    },\n}));\nexport default Links;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { Grid, Avatar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChatBubbleRoundedIcon from '@material-ui/icons/ChatBubbleRounded';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nimport ViewerContext from './../context/ViewerContext'\n\nconst useStyles = makeStyles(theme => ({\n    profileAvatar:{\n        width: '50px',\n        height: '50px',\n        borderRadius: '25px',\n        objectFit: 'cover',\n    },\n    container:{\n        padding: '10px',\n    },\n    test: {\n        width: '100%',\n        height: 'auto',\n    },\n    root: {\n        borderRadius: \"10px\",\n        width: '100%',\n        maxWidth: '600px',\n        boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.25), 0 3px 10px 0 rgba(0, 0, 0, 0.075)',\n        padding: '10px',\n    },\n    name:{\n        lineHeight: 1.3,\n        marginLeft: '15px',\n        marginRight: '15px',\n        fontWeight: 400,\n    },\n    time: {\n        fontWeight: 200,\n        lineHeight: 1,\n        marginLeft: '16px',\n        fontSize: '13px',\n    },\n    caption:{\n        marginTop: '15px',\n        marginLeft: '15px',\n        fontWeight: 400,\n        fontSize: '14px',\n        lineHeight: 1.3,\n        width: '90%'\n    },\n    postImage:  {\n        marginTop: '15px',\n        borderRadius: '5px',\n        width: '100%',\n        height: 'auto'\n    },\n    profilePictureContainer: {\n    },\n    interactionsContainer: {\n        justifyContent: 'space-around',\n        marginTop: '-13px',\n        alignItems: 'center'\n\n    },\n    interactions: {\n        marginTop: '18px',\n        marginLeft: '10px'\n    },\n}));\n\nconst PostComponent = ({ post, profilePicture, username, onClick, name}) => {\n    console.log(\"unauthenticated user\")\n    const history = useHistory();\n    const classes = useStyles();\n\n    const getDate = ( unixTime ) => {\n        const dateObject = new Date(unixTime)\n        const humanDateFormat = dateObject.toLocaleString(\"en-US\", {day: \"numeric\", month: \"long\", year: 'numeric'})\n        return humanDateFormat\n    }\n\n    return(\n        <div className={classes.container}\n            onClick={() => {\n                history.push({pathname: \"/post/\"+post.id,\n                            postData: {post, profilePicture, username, name}\n                            })\n            }\n            }>\n            <div className={classes.root}>\n                <Grid  container >\n                    <ProfilePicture classes={classes} username={username} profilePicture={profilePicture}/>\n                    <Grid item>\n                        <Name classes={classes} name={username}/>\n                        <Time classes={classes} time={getDate(post.time)}/>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid className={classes.test} item >\n                        <Caption classes={classes} caption={post.content[0].text}/>\n                        <PostImage classes={classes} image={post.content[0].url}/>\n                    </Grid>\n                </Grid>\n                <hr/>\n                <Grid container>\n                    <Grid item container className={classes.interactionsContainer}>\n                        <LikeButton style={{ alignSelf: \"center\" }} post={post} username={username} classes={classes} />\n                        <CommentButton classes={classes} />\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nconst ProfilePicture = ({classes, profilePicture, username}) => {\n    //const initial = username[0]\n    const initial = 'M'\n    return(\n        <div className={classes.profileAvatar}>\n            <Avatar className={classes.profileAvatar}>\n                {profilePicture ?\n                <img className={classes.profileAvatar} src={profilePicture} alt='profile'></img>\n                :\n                initial\n                }\n            </Avatar>\n        </div>\n    )\n}\n\nconst Name = ({classes, name}) => {\n    return(\n        <div>\n            <Typography align='left' className={classes.name}>{name}</Typography>\n        </div>\n    )\n}\n\nconst Time= ({classes, time}) => {\n    return(\n        <div>\n            <Typography align='left' className={classes.time}>{time}</Typography>\n        </div>\n    )\n}\nconst Caption = ({classes, caption}) => {\n    return(\n        <div>\n            <Typography align='left' className={classes.caption}>\n                {caption}\n            </Typography>\n        </div>\n    )\n}\n\nconst PostImage = ({classes, image }) => {\n    return(\n            <img className={classes.postImage} src={image} alt='post'></img>\n    )\n}\n\nconst LikeButton = ({post, username, classes, }) => {\n\n    const handleLikeEvent = (e) => {\n        e.stopPropagation()\n        //check if viewer is authenticated (is there a viewer token in cache?)\n        //if no open viewer sign up/login page else send like to server\n        //console.log(post, username)\n        //send the following to database: time, viewer name/username, comment data, viewer picture,\n    }\n\n    return(\n        <div className={classes.interactions}>\n            <FavoriteBorderIcon onClick={(e) => handleLikeEvent(e)}/>\n        </div>\n    )\n}\nconst LikeNumber= ({classes, likes}) => {\n    return(\n        <div className={classes.interactions}>\n            <Typography>{likes}</Typography>\n        </div>\n    )\n}\nconst CommentButton = ({classes}) => {\n    return(\n        <div className={classes.interactions}>\n            <ChatBubbleRoundedIcon />\n        </div>\n    )\n}\nconst CommentNumber = ({classes, comments}) => {\n    return(\n        <div className={classes.interactions}>\n            <Typography>{comments.length}</Typography>\n        </div>\n    )\n}\n\nexport default PostComponent;\n","import React, {useState, useEffect,  useContext }from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { Grid, Avatar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChatBubbleRoundedIcon from '@material-ui/icons/ChatBubbleRounded';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined'\nimport { serverURL } from './../global'\n\nimport axios from 'axios'\nimport ViewerContext from './../context/ViewerContext'\n\nconst useStyles = makeStyles(theme => ({\n    profileAvatar:{\n        width: '50px',\n        height: '50px',\n        borderRadius: '25px',\n        objectFit: 'cover',\n    },\n    commentProfileAvatar:{\n        width: '40px',\n        height: '40px',\n        borderRadius: '25px',\n        objectFit: 'cover',\n    },\n    container:{\n        padding: '10px',\n    },\n    test: {\n        width: '100%',\n        height: 'auto',\n    },\n    root: {\n        borderRadius: \"10px\",\n        width: '100%',\n        maxWidth: '600px',\n        boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.25), 0 3px 10px 0 rgba(0, 0, 0, 0.075)',\n        padding: '10px',\n    },\n    name:{\n        lineHeight: 1.3,\n        marginLeft: '15px',\n        marginRight: '15px',\n        fontWeight: 400,\n    },\n    time: {\n        fontWeight: 200,\n        lineHeight: 1,\n        marginLeft: '16px',\n        fontSize: '13px',\n    },\n    caption:{\n        marginTop: '15px',\n        marginLeft: '15px',\n        fontWeight: 400,\n        fontSize: '14px',\n        lineHeight: 1.3,\n        width: '90%'\n    },\n    postImage:  {\n        marginTop: '15px',\n        borderRadius: '5px',\n        width: '100%',\n        height: 'auto'\n    },\n    profilePictureContainer: {\n    },\n    interactionsContainer: {\n        justifyContent: 'space-around',\n        marginTop: '-13px',\n        alignItems: 'center'\n    },\n    interactions: {\n        marginTop: '18px',\n        marginLeft: '10px'\n    },\n}));\n\nconst PostComponentAuthenticated = ({ post, profilePicture, username, onClick, name }) => {\n\n    const { viewerData } = useContext(ViewerContext);\n    const history = useHistory();\n    console.log('authenticated')\n    console.log(post)\n    const classes = useStyles();\n\n\n    const getDate = ( unixTime ) => {\n        const dateObject = new Date(unixTime)\n        const humanDateFormat = dateObject.toLocaleString(\"en-US\", {day: \"numeric\", month: \"long\", year: 'numeric'})\n        return humanDateFormat\n    }\n\n    return(\n        <div className={classes.container}\n            onClick={() => {\n                history.push({pathname: \"/post/\"+post.id,\n                            postData: {post, profilePicture, username, name}\n                            })\n                console.log(post)\n            }\n            }>\n            <div className={classes.root}>\n                <Grid  container>\n                    <ProfilePicture classes={classes} username={username} profilePicture={profilePicture}/>\n                    <Grid item>\n                        <Name classes={classes} name={username}/>\n                        <Time classes={classes} time={getDate(post.time)}/>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid className={classes.test} item >\n                        <Caption classes={classes} caption={post.content[0].text}/>\n                        <PostImage classes={classes} image={post.content[0].url}/>\n                    </Grid>\n                </Grid>\n                <hr/>\n                <Grid container>\n                    <Grid item container className={classes.interactionsContainer}>\n                        <LikeButton style={{ alignSelf: \"center\" }} post={post} username={username} classes={classes} />\n                        <CommentButton classes={classes} post={post} username={username}/>\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nconst ProfilePicture = ({classes, profilePicture, username}) => {\n    //const initial = username[0]\n    const initial = 'M'\n    return(\n        <div className={classes.profileAvatar}>\n            <Avatar className={classes.profileAvatar}>\n                {profilePicture ?\n                <img className={classes.profileAvatar} src={profilePicture} alt='profile'></img>\n                :\n                initial\n                }\n            </Avatar>\n        </div>\n    )\n}\n\nconst CommentProfilePicture = ({classes, commentProfilePicture, commentUsername}) => {\n    //const initial = username[0]\n    const initial = 'M'\n    return(\n        <div className={classes.commentProfileAvatar}>\n            <Avatar className={classes.commentProfileAvatar}>\n                {\n                commentProfilePicture ?\n                <img className={classes.profileAvatar} src={commentProfilePicture} alt='profile'></img>\n                :\n                initial\n                }\n            </Avatar>\n        </div>\n    )\n}\n\nconst Name = ({classes, name}) => {\n    return(\n        <div>\n            <Typography align='left' className={classes.name}>{name}</Typography>\n        </div>\n    )\n}\n\nconst CommentName = ({classes, name}) => {\n    return(\n        <div>\n            <Typography align='left' className={classes.name}>{name}</Typography>\n        </div>\n    )\n}\nconst Time= ({classes, time}) => {\n    return(\n        <div>\n            <Typography align='left' className={classes.time}>{time}</Typography>\n        </div>\n    )\n}\nconst Caption = ({classes, caption}) => {\n    return(\n        <div>\n            <Typography align='left' className={classes.caption}>\n                {caption}\n            </Typography>\n        </div>\n    )\n}\n\nconst PostImage = ({classes, image }) => {\n    return(\n            <img className={classes.postImage} src={image} alt='post'></img>\n    )\n}\n\nconst LikeButton = ({post, username, classes, }) => {\n\n    const { viewerData } = useContext(ViewerContext);\n    const [ liked, setLiked ] = useState('')\n    const editData = {\n            editData: [{\n                postID: post.id,\n                viewerUsername: viewerData.viewer.username,\n                viewerName: viewerData.viewer.username,\n                userUsername: username\n            }]\n    }\n    const handleLikeEvent = (e) => {\n        e.stopPropagation()\n        setLiked('liked')\n        const createLikeData = JSON.stringify(editData)\n        const config = {\n          method: 'post',\n          url: `${serverURL}` + createLikeData,\n          headers: {\n            'auth-token-viewer': viewerData.token,\n          },\n        };\n        axios(config)\n            .then(res => {\n                console.log(res)\n                console.log(e)\n            })\n            .catch(err => console.log(err))\n        //send the following to database: time, viewer name/username, comment data, viewer picture,\n    }\n\n    return(\n        <div className={classes.interactions}>\n            {\n                liked === 'liked' ? (\n\n                    <FavoriteOutlinedIcon onClick={() => setLiked('')}/>\n                ) :\n                (\n                    <FavoriteBorderIcon onClick={(e) => handleLikeEvent(e)}/>\n                )\n            }\n        </div>\n    )\n}\nconst LikeNumber= ({classes, likes}) => {\n    return(\n        <div className={classes.interactions}>\n            <Typography>{likes}</Typography>\n        </div>\n    )\n}\nconst CommentButton = ({post, username, classes,}) => {\n    const { viewerData } = useContext(ViewerContext);\n    const [comment, setComment] = useState('test comment');\n    let editData;\n\n    useEffect(() => {\n        editData = {\n            editData: [{\n                postID: post.id,\n                viewerUsername: viewerData.viewer.username,\n                viewerName: viewerData.viewer.username,\n                commentData: comment,\n                userUsername: username\n            }]\n        }\n    }, [comment])\n    const handleCommentEvent = (e) => {\n        e.stopPropagation()\n        //send the following to database: time, viewer name/username, comment data, viewer picture,\n        const createCommentData = JSON.stringify(editData)\n        const config = {\n          method: 'post',\n          url: `${serverURL}api/addComment/?editData=` + createCommentData,\n          headers: {\n            'auth-token-viewer': viewerData.token,\n          },\n        };\n        axios(config)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n    return(\n        <div className={classes.interactions}>\n            <ChatBubbleRoundedIcon onClick={e => {\n                e.stopPropagation();\n                console.log('hi')}}/>\n        </div>\n    )\n}\nconst CommentNumber = ({classes, comments}) => {\n    return(\n        <div className={classes.interactions}>\n            <Typography>{comments.length}</Typography>\n        </div>\n    )\n}\nconst CommentData = ({ classes, commentData  }) => {\n    return(\n        <div>\n            <Typography> {commentData}  </Typography>\n        </div>\n    )\n}\n\nexport default PostComponentAuthenticated;\n","import React , { useContext }from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PostComponent from './PostComponent';\nimport PostComponentAuthenticated from './PostComponentAuthenticated';\n\nimport ViewerContext from './../context/ViewerContext'\n\n//check authentication here and render Post Component / Authenticated Post Component\n\n\nconst Posts = ({ profilePicture, posts, username, name }) => {\n    console.log(name)\n    const classes= useStyles()\n    const { viewerData } = useContext(ViewerContext);\n    return(\n        <div className={classes.root}>\n            {\n                viewerData.viewer ? (\n                    posts.map(post => {\n                        return(\n                            <PostComponentAuthenticated key={post.id} post={post} profilePicture={profilePicture} username={username} name={name}/>\n                        )\n                    })\n                ) : (\n                    posts.map(post => {\n                        return(\n                            <PostComponent key={post.id} post={post} profilePicture={profilePicture} username={username} name={name}/>\n                        )\n                    })\n                )\n            }\n        </div>\n    )\n}\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        maxWidth: '100%',\n\n    }\n}))\nexport default Posts;\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from '@material-ui/core'\n\nconst CreatePostButton = () => {\n    const history = useHistory();\n\n    return (\n        <div>\n            <Button onClick={() => history.push('/edit/createPost')} variant='outlined'> Create Post </Button>\n        </div>\n    )\n}\n\nexport default CreatePostButton;\n","import React from 'react';\nimport Links from './../components/Links'\nimport Posts from './../components/Posts'\nimport CreatePostButton from './../components/CreatePostButton'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#FFF'\n        //border: '2px solid red'\n    }\n}))\n\nconst Home = ( {links, posts, profilePicture, username, name} ) => {\n    const classes = useStyles();\n    return(\n        <div className= {classes.root} >\n            <Links links={links} />\n            <CreatePostButton />\n            <Posts  name={name} username={username} posts={posts} profilePicture={profilePicture}/>\n        </div>\n    )\n}\n\nexport default Home;\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root:{\n        width: '100%',\n        marginBottom: '10px',\n        borderRadius: '5px',\n        boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.25), 0 3px 10px 0 rgba(0, 0, 0, 0.075)',\n    },\n    thumbnailContainer: {\n        width: '100%',\n        height: 'auto',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    thumbnailImg:{\n        width: '100%',\n        maxWidth: '100%',\n        maxHeight: 'auto',\n    },\n    videoTitleContainer:{\n        justifyContent: 'flex-start'\n    },\n    videoTitle:{\n        marginLeft: '5px',\n        fontSize: '15px',\n        padding: '2px'\n    }\n})\n)\n\nconst YtVideoComponent = ({thumbnail, title, id}) => {\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <Grid container className={classes.thumbnailContainer}>\n                <Thumbnail imageURL={thumbnail}classes={classes} id={id}/>\n            </Grid>\n            <Grid container className={classes.videoTitleContainer}>\n                <VideoTitle title={title } classes={classes}/>\n            </Grid>\n        </div>\n    )\n}\n\nconst VideoTitle = ({ title, classes }) => {\n\n    return (\n        <div>\n            <Typography className={classes.videoTitle}>{title}</Typography>\n        </div>\n    )\n}\n\nconst Thumbnail = ({ imageURL, classes, id }) => {\n\n    return(\n        <a className={classes.thumbnailImg} href={\"https://www.youtube.com/watch?v=\" + id}>\n            <img className={classes.thumbnailImg} src={imageURL} alt='youtube video thumbnail' ></img>\n        </a>\n    )\n}\n\nexport default YtVideoComponent\n","import React , { useState, useEffect }from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport YtVideoComponent from './YtVideoComponent'\nimport { serverURL } from './../../global'\nimport axios from 'axios'\nconst YtVideos= ({youtubeid}) => {\n    const classes = useStyles()\n    const [ youtubeVideos, setYoutubeVideos ] = useState([])\n    useEffect(() => {\n        axios.get(serverURL + youtubeid + \"/blog\")\n            .then(res => setYoutubeVideos(res.data.thumbnails))\n    }, [])\n    return (\n        <div>\n            <Grid container className={classes.root}>\n\n                <Grid item className={classes.linkContainer}>\n                    {\n                        youtubeVideos.map( video => (\n                            <YtVideoComponent id={video.id} thumbnail={video.thumbnail} title={video.title}/>\n                        ))\n                    }\n                </Grid>\n\n            </Grid>\n        </div>\n    )\n}\n\nconst useStyles= makeStyles( theme => ({\n    root: {\n    },\n    linkContainer:{\n        width: '100%',\n        maxWidth: '600px',\n        margin: '5px',\n        borderRadius: '5px',\n    }\n})\n)\n\nexport default YtVideos;\n","import React from 'react';\nimport YtVideos from './../components/BlogPage/YtVideos'\n\nconst Blog = ({ youtubeid }) => {\n    return (\n        <div className=''>\n            {\n                youtubeid ?\n                    ( <YtVideos youtubeid={youtubeid}/>)\n                    :\n                    ( <p> no blog yet </p> )\n            }\n                    </div>\n    )\n}\n\nexport default Blog;\n","import React, {useState, useEffect, useContext} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport UserContext from './../context/UserContext'\nimport ViewerContext from './../context/ViewerContext'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography, TextField } from '@material-ui/core';\nimport Popup from 'reactjs-popup';\nimport axios from 'axios'\nimport 'reactjs-popup/dist/index.css';\nimport { serverURL } from './../global'\n\nconst useStyles = makeStyles(theme => ({\n    profilePicture: {\n        width: '100px',\n        height: '100px',\n        borderRadius: '150px',\n        objectFit: 'cover',\n        margin: '10px',\n        padding: '10px'\n    },\n    editPicture: {\n        margin: '10px'\n    }\n}))\nconst EditProfilePage = ({ profilePicture, links }) => {\n    const { setViewerData } = useContext(ViewerContext)\n    const { setUserData } = useContext(UserContext)\n    const [x, setX] = useState('')\n    const history = useHistory();\n    const classes = useStyles();\n    //logs out user and viewer\n    const logout = () => {\n        console.log('logging out')\n        setViewerData({\n            token: undefined,\n            viewer: undefined,\n        })\n        setViewerData({\n            token: undefined,\n            viewer: undefined,\n        })\n        localStorage.setItem('auth-token', '')\n        localStorage.setItem('auth-token-viewer', '')\n        window.location.reload(false);\n    }\n    return(\n        <div>\n            <div>\n                <EditProfilePicture profilePicture={profilePicture} classes={classes}/>\n                <Popup className={classes.editPicture} trigger={<Button> Change Profile Picture</Button>} position=\"bottom center\">\n                    <div>\n                        <Button > remove current </Button>\n                        <Button onClick={() => history.push('/edit/changeProfilePicture')}> upload new </Button>\n                    </div>\n                </Popup>\n            </div>\n            <EditYoutubeId />\n            <br/>\n            <br/>\n            <div>\n                <Popup className={classes.editPicture} trigger={<Button>Logout </Button>} position=\"bottom center\">\n                    <div>\n                        <Typography> Do you want to logout?</Typography>\n                        <Button onClick={() => logout()}> Yes  </Button>\n                    </div>\n                </Popup>\n            </div>\n\n\n        </div>\n    )\n}\n\nconst EditProfilePicture = ({profilePicture, classes}) => {\n    return(\n        <div className={classes.profilePictureContainer}>\n            <img className={classes.profilePicture} src={profilePicture} />\n        </div>\n    )\n}\n\nconst EditYoutubeId = () => {\n    const [ youtubeId, setYoutubeId ] = useState('')\n    const { userData } = useContext(UserContext)\n\n    useEffect(() => {\n        console.log(youtubeId)\n    }, [youtubeId])\n\n    const handleYoutubeSubmit = () => {\n        if (youtubeId === \"\") return\n\n        console.log('sending')\n        const config = {\n          method: 'post',\n          url: serverURL + \"api/edit/youtubeid?editData=\\\"\" + youtubeId + \"\\\"\" ,\n          headers: {\n            'auth-token': userData.token,\n          },\n        };\n        console.log(config.url)\n        axios(config)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n    return(\n        <div>\n            <TextField\n                required\n                id=\"youtube\"\n                label=\"youtube-id\"\n                onChange={(e) => setYoutubeId(e.target.value)}\n            />\n            <br/>\n            <br/>\n            <Button variant='outlined' onClick={handleYoutubeSubmit}>SET YOUTUBE ID</Button>\n        </div>\n    )\n}\n\nexport default EditProfilePage\n","import React from 'react';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport { Home, VideoLibrary, AccountCircle} from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles'\n\n\nconst BotNav = ({value, onChange}) => {\n    const classes = useStyles();\n    return(\n        <BottomNavigation className={classes.botnav} position='static' value={value} onChange={(e, tab) => onChange(tab)}>\n            <BottomNavigationAction className={classes.icons} icon={<Home/>} />\n            <BottomNavigationAction className={classes.icons} icon={<VideoLibrary/>} />\n            <BottomNavigationAction className={classes.icons} icon={<AccountCircle/>} />\n        </BottomNavigation>\n    )\n}\n\nconst useStyles = makeStyles( theme => ({\n    botnav: {\n        bottom: '0px',\n    },\n    icons: {\n    }\n})\n)\n\nexport default BotNav;\n","import React from 'react';\nimport { AppBar, Toolbar, Avatar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n//import AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst Topnav = ({ name, profilePicture }) => {\n    const classes = useStyles();\n    return(\n        <AppBar className={classes.root} position='static' >\n            <Toolbar className={classes.appbar}>\n                <Avatar><img className={classes.profileImage} src={profilePicture} alt='avatar' /></Avatar>\n                <Typography className={classes.title}> {name.toUpperCase()}</Typography>\n                <div>   </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n    },\n    appbar:{\n        justifyContent: 'space-between',\n    },\n    title:{\n        fontSize: '0.9rem',\n        fontWeight: '600',\n        letterSpacing: '0.8vw',\n    },\n    profileImage: {\n        height: '50px',\n        width: '50px',\n        objectFit: 'cover'\n    }\n}))\nexport default Topnav;\n","import React, { useContext, useState } from 'react';\nimport Home from './Home';\nimport Blog from './Blog';\nimport EditProfilePage from './EditProfilePage';\nimport BotNav from './../components/BotNav';\nimport Topnav from './../components/Topnav';\n\nimport UserContext from './../context/UserContext'\n\nimport { Grid, CssBaseline } from '@material-ui/core';\n\nconst UserHomePage = () => {\n\n    const { userData } = useContext(UserContext)\n    const [tab, setTab] = useState(0);\n    const renderView = () => {\n        switch(tab){\n            case 0:\n                return <Home name={userData.user.name} username={userData.user.username} posts={userData.user.posts} links={userData.user.links} profilePicture={userData.user.profilePicture}/>;\n            case 1:\n                return <Blog youtubeid={userData.user.youtubeId}/>\n            case 2:\n                return <EditProfilePage links={userData.user.links} profilePicture={userData.user.profilePicture}/>\n            default:\n                return new Error('This does not exist');\n        }\n    }\n\n  return (\n    <div>\n        <Grid container direction='column'>\n            <Topnav profilePicture={userData.user.profilePicture} name={userData.user.name}/>\n                <div style={containerStyles}>\n                    {renderView()}\n                </div>\n            <BotNav value={tab} onChange={setTab}/>\n        </Grid>\n        <CssBaseline />\n    </div>\n  );\n}\n\n//TODO fix height when screen size increases\nconst containerStyles = {\n    height: 'calc(100vh - 112px)',\n    width: '100%',\n    background: '#fff',\n    overflow: 'auto',\n    textAlign: 'center',\n    maxWidth: '100%',\n    backgroundColor: '#FFF'\n};\n\nexport default UserHomePage;\n","import React, { useContext }from 'react';\nimport AppHomePage from './AppHomePage';\nimport UserHomePage from './UserHomePage';\nimport UserContext from './../context/UserContext'\n\nconst AuthHomePage = () => {\n    const { userData } = useContext(UserContext)\n    return(\n        <div>\n            {\n                userData.user ? ( <UserHomePage /> ) : (<AppHomePage />)\n            }\n        </div>\n    )\n}\n\nexport default AuthHomePage;\n","\nexport function base64StringtoFile (base64String, filename) {\n  var arr = base64String.split(','), mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n)\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n)\n  }\n  return new File([u8arr], filename, {type: mime})\n}\n\n// Download a Base64-encoded file\n\nexport function downloadBase64File (base64Data, filename) {\n  var element = document.createElement('a')\n  element.setAttribute('href', base64Data)\n  element.setAttribute('download', filename)\n  element.style.display = 'none'\n  document.body.appendChild(element)\n  element.click()\n  document.body.removeChild(element)\n}\n\n// Extract an Base64 Image's File Extension\nexport function extractImageFileExtensionFromBase64 (base64Data) {\n  return base64Data.substring('data:image/'.length, base64Data.indexOf(';base64'))\n}\n\n// Base64 Image to Canvas with a Crop\nexport function image64toCanvasRef (canvasRef, image64, pixelCrop) {\n  const canvas = canvasRef // document.createElement('canvas');\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n  const ctx = canvas.getContext('2d')\n  const image = new Image()\n  image.src = image64\n  image.onload = function () {\n    ctx.drawImage(\n      image,\n      pixelCrop.x,\n      pixelCrop.y,\n      pixelCrop.width,\n      pixelCrop.height,\n      0,\n      0,\n      pixelCrop.width,\n      pixelCrop.height\n    )\n  }\n}\n","import React, { useState, useEffect, useContext }from 'react';\nimport { useHistory } from 'react-router-dom'\nimport Dropzone from 'react-dropzone';\nimport ReactCrop from 'react-image-crop';\nimport { Typography } from '@material-ui/core'\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport axios from 'axios'\nimport UserContext from './../context/UserContext'\nimport { serverURL } from './../global'\n\nimport { base64StringtoFile,\n         downloadBase64File,\n         extractImageFileExtensionFromBase64,\n         image64toCanvasRef,\n       } from './../utils/cropUtils'\n\nconst CreatePostPage = () => {\n    const [imageToUpload, setImageToUpload] = useState(null);\n    const [imageSrc, setImageSrc] = useState(null)\n    const [imageSrcExt, setImageSrcExt] = useState(null)\n    const [crop, setCrop] = useState({\n        aspect: 1/1,\n    })\n    const [caption, setCaption] = useState('');\n    const { userData } = useContext(UserContext)\n    const history = useHistory();\n    let editData = '';\n    useEffect(() => {\n        editData = {\n            editData: [{\n                \"type\": 'image-post',\n                \"content\": [{\n                    text: caption,\n                    url: ''\n                }]\n            }]\n        }\n        console.log(JSON.stringify(editData))\n    }, [caption])\n\n    let imagePreviewCanvasRef = React.createRef()\n    let fileInputRef = React.createRef()\n\n    const imageMaxSize = 10000000;\n    const verifyFiles = ( files ) => {\n\n        //TODO rejectedFiles have fileType in currentFile.file.type\n        if( files && files.length > 0 ){\n            const currentFile = files[0];\n            const currentFileType = currentFile.type;\n            const currentFileSize = currentFile.size;\n            console.log(currentFile)\n            if(currentFileSize > imageMaxSize){\n                console.log('too big')\n                alert('The file is too big. Maximum file size is' + imageMaxSize);\n                return false;\n            }\n        }\n        return true;\n    }\n\n    const handleOnDrop = (files, rejectedFiles) => {\n        if(rejectedFiles && rejectedFiles.length > 0){\n            verifyFiles(rejectedFiles);\n        }\n        if (files && files.length > 0){\n            const isVerified = verifyFiles(files)\n            if( isVerified ){\n                const currentFile = files[0]\n                const myFileItemReader = new FileReader()\n                myFileItemReader.addEventListener('load', () => {\n                    const myResult = myFileItemReader.result;\n                    setImageSrc(myResult)\n                    setImageSrcExt(extractImageFileExtensionFromBase64(myResult))\n                } , false)\n                myFileItemReader.readAsDataURL(currentFile)\n            }\n        }\n    }\n\n    const handleImageLoaded = ( image ) => {\n    }\n    const handleOnCropChange = (crop) => {\n        setCrop(crop)\n    }\n\n    const handleOnCropComplete = (crop, pixelCrop) => {\n        const canvasRef = imagePreviewCanvasRef.current;\n        const imageSource = imageSrc;\n        image64toCanvasRef(canvasRef, imageSource, crop)\n    }\n\n\n    //working\n    const handleUploadClick = (event) => {\n        event.preventDefault()\n        const fd = new FormData();\n        console.log(imageToUpload);\n        fd.append('image', imageToUpload, imageToUpload.name)\n        const createPostData = JSON.stringify(editData)\n\n        const config = {\n          method: 'post',\n          url: `${serverURL}api/createPost/?editData=` + createPostData,\n          headers: {\n            'auth-token': userData.token,\n          },\n          data : fd\n        };\n        axios(config)\n            .then(res => history.push('/'))\n            .catch(err => console.log(err))\n    }\n    const handleDownloadClick = (event ) => {\n        event.preventDefault()\n        const imageSource = imageSrc;\n        if(imageSource) {\n            const canvasRef = imagePreviewCanvasRef.current;\n            const imageSource = imageSrc;\n            const fileExtension = extractImageFileExtensionFromBase64(imageSource)\n            const imageData64 = canvasRef.toDataURL('image/' + fileExtension);\n            const myFileName = \"previewFile.\" + fileExtension\n\n            //file to be uploaded\n            const myNewCroppedFile = base64StringtoFile(imageData64, myFileName)\n            console.log('cropped')\n            console.log(myNewCroppedFile);\n\n            // download file\n            downloadBase64File(imageData64, myFileName)\n            handleClearToDefault()\n        }\n    }\n    const handleCaptionChange = (event) => {\n        setCaption(event.target.value)\n    }\n    const handleClearToDefault = ( event ) => {\n        if(event){\n            event.preventDefault();\n        }\n        const canvas = imagePreviewCanvasRef.current\n        const ctx = canvas.getContext('2d')\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\n        setImageSrc(null)\n        setImageSrcExt(null)\n        fileInputRef.current.value = null\n    }\n    const handleFileSelect = (event) => {\n        console.log(event)\n        const files = event.target.files\n        if(files && files.length > 0 ){\n            const isVerified = verifyFiles(files)\n            if( isVerified ){\n                const currentFile = files[0]\n                const myFileItemReader = new FileReader()\n                myFileItemReader.addEventListener('load', () => {\n                    const myResult = myFileItemReader.result;\n                    setImageSrc(myResult);\n                    setImageSrcExt(extractImageFileExtensionFromBase64(myResult))\n                } , false)\n                myFileItemReader.readAsDataURL(currentFile)\n                console.log(currentFile)\n                setImageToUpload(currentFile);\n            }\n        }\n    }\n\n    return(\n        <div>\n            <input ref={fileInputRef} type='file' accept='image/*' multiple={false} onChange={handleFileSelect}/>\n            {\n                (imageSrc !== null) ?\n                    <div>\n                        <ReactCrop\n                            onChange={handleOnCropChange}\n                            src={imageSrc}\n                            crop={crop}\n                            onImageLoaded={handleImageLoaded}\n                            onComplete={handleOnCropComplete}/>\n\n                        <input type='text' onChange={handleCaptionChange} />\n                        <canvas ref={imagePreviewCanvasRef}></canvas>\n                        <button onClick={handleUploadClick}> Upload</button>\n                        <button onClick={handleClearToDefault}> Clear </button>\n                    </div>\n                    :\n                    ''\n            }\n            <Dropzone onDrop={handleOnDrop} maxSize={imageMaxSize} multiple={false} accept='image/*' >\n                {({getRootProps, getInputProps}) => (\n                    <section>\n                        <div {...getRootProps()}>\n                            <input {...getInputProps()} />\n                            <Typography>Drag 'n' drop some files here, or click to select files</Typography>\n                        </div>\n                    </section>\n                )}\n            </Dropzone>\n        </div>\n    )\n}\n\nexport default CreatePostPage;\n","import { useHistory } from \"react-router-dom\";\nimport React, { useState, useContext }from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { Button, makeStyles } from '@material-ui/core'\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport axios from 'axios'\nimport UserContext from './../context/UserContext'\nimport { serverURL } from './../global'\n\nimport { base64StringtoFile,\n         downloadBase64File,\n         extractImageFileExtensionFromBase64,\n         image64toCanvasRef,\n       } from './../utils/cropUtils'\n\nconst useStyles = makeStyles(theme => ({\n    input: {\n        width: \"0.1px\",\n\t    height: \"0.1px\",\n\t    opacity: \"0\",\n\t    overflow:\"hidden\",\n\t    position:\"absolute\",\n        zIndex: \"-1\"\n    },\n    inputLabel:{\n        margin: '5px',\n        height: '100%',\n        padding: '10px',\n        width: '100%'\n    },\n    root:{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    actionButtons:{\n        display: 'flex',\n        flexDirection:'row',\n        justifyContent: 'center'\n    }\n}))\n\nconst ChangeProfilePicturePage = () => {\n    const [imageToUpload, setImageToUpload] = useState(null);\n    const [imageSrc, setImageSrc] = useState(null)\n    const [imageSrcExt, setImageSrcExt] = useState(null)\n    const [crop, setCrop] = useState({\n        aspect: 1/1,\n    })\n\n    const classes = useStyles();\n    const { userData } = useContext(UserContext)\n    const history = useHistory();\n    let imagePreviewCanvasRef = React.createRef()\n    let fileInputRef = React.createRef()\n\n    const imageMaxSize = 10000000;\n    const verifyFiles = ( files ) => {\n\n        //TODO rejectedFiles have fileType in currentFile.file.type\n        if( files && files.length > 0 ){\n            const currentFile = files[0];\n            const currentFileType = currentFile.type;\n            const currentFileSize = currentFile.size;\n            console.log(currentFile)\n            if(currentFileSize > imageMaxSize){\n                console.log('too big')\n                alert('The file is too big. Maximum file size is' + imageMaxSize);\n                return false;\n            }\n        }\n        return true;\n    }\n\n\n    const handleImageLoaded = ( image ) => {\n    }\n    const handleOnCropChange = (crop) => {\n    }\n\n    const handleOnCropComplete = (crop, pixelCrop) => {\n        const canvasRef = imagePreviewCanvasRef.current;\n        const imageSource = imageSrc;\n        image64toCanvasRef(canvasRef, imageSource, crop)\n    }\n\n\n    const handleUploadClick = (event) => {\n        event.preventDefault()\n        const fd = new FormData();\n        console.log(imageToUpload);\n        fd.append('image', imageToUpload, imageToUpload.name)\n\n        const config = {\n          method: 'post',\n          url:`${serverURL}api/upload/profilePicture`,\n          headers: {\n            'auth-token': userData.token,\n          },\n          data : fd\n        };\n        axios(config)\n            .then(res => history.goBack())\n            .catch(err => console.log(err))\n    }\n\n    const handleDownloadClick = (event ) => {\n        event.preventDefault()\n        const imageSource = imageSrc;\n        if(imageSource) {\n            const canvasRef = imagePreviewCanvasRef.current;\n            const imageSource = imageSrc;\n            const fileExtension = extractImageFileExtensionFromBase64(imageSource)\n            const imageData64 = canvasRef.toDataURL('image/' + fileExtension);\n            const myFileName = \"previewFile.\" + fileExtension\n\n            //file to be uploaded\n            const myNewCroppedFile = base64StringtoFile(imageData64, myFileName)\n            console.log('cropped')\n            console.log(myNewCroppedFile);\n\n            // download file\n            downloadBase64File(imageData64, myFileName)\n            handleClearToDefault()\n        }\n    }\n    const handleClearToDefault = ( event ) => {\n        if(event){\n            event.preventDefault();\n        }\n        const canvas = imagePreviewCanvasRef.current\n        const ctx = canvas.getContext('2d')\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\n        setImageSrc(null)\n        setImageSrcExt(null)\n        fileInputRef.current.value = null\n    }\n    const handleFileSelect = (event) => {\n        console.log(event)\n        const files = event.target.files\n        if(files && files.length > 0 ){\n            const isVerified = verifyFiles(files)\n            if( isVerified ){\n                const currentFile = files[0]\n                const myFileItemReader = new FileReader()\n                myFileItemReader.addEventListener('load', () => {\n                    const myResult = myFileItemReader.result;\n                    setImageSrc(myResult);\n                    setImageSrcExt(extractImageFileExtensionFromBase64(myResult))\n                } , false)\n                myFileItemReader.readAsDataURL(currentFile)\n                console.log(currentFile)\n                setImageToUpload(currentFile);\n            }\n        }\n    }\n\n    return(\n        <div className={classes.root}>\n            <input className={classes.input} ref={fileInputRef} name='file' id='file' type='file' accept='image/*' multiple={false} onChange={handleFileSelect}/>\n            <Button variant='outlined'>\n                <label className={classes.inputLabel}for=\"file\">Upload a profile picture </label>\n            </Button>\n            <br/>\n            {\n                (imageSrc !== null) ?\n                    <div>\n                        <ReactCrop\n                            onChange={handleOnCropChange}\n                            src={imageSrc}\n                            crop={crop}\n                            onImageLoaded={handleImageLoaded}\n                            onComplete={handleOnCropComplete}/>\n\n                        <canvas ref={imagePreviewCanvasRef}></canvas>\n                        <br />\n                        <br />\n                        <div className={classes.actionButtons}>\n                            <Button variant=\"outlined\" onClick={handleUploadClick}> Upload </Button>\n                        </div>\n                    </div>\n                    :\n                    ''\n            }\n        </div>\n    )\n}\n\nexport default ChangeProfilePicturePage;\n","import React, { useState, useContext, useEffect, useRef }from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Typography, TextField, Checkbox, Grid, Button} from '@material-ui/core'\nimport axios from 'axios'\nimport UserContext from './../context/UserContext'\n\nconst ChangeLinksPage = () => {\n    const { userData } = useContext(UserContext)\n    const link1name = useRef()\n    const [links, setLinks] = useState(userData.user.links)\n    useEffect(() => {\n        console.log(links)\n    }, [links])\n    const addLink = () => {\n        const link =\n            {\n                id: links.length + 1,\n                name: \"\",\n                linkURL: \"\"\n            }\n        setLinks([...links, link])\n    }\n    return(\n        <div>\n            {\n\n                links.length < 5 ?\n                    (\n                        <Button onClick={addLink} variant=\"outlined\"> Add Link </Button>\n                    ) :\n                    ( \"\" )\n            }\n            {\n                links.map(link => (\n                    <div key={link.id}>\n                        <Typography > Link { link.id } </Typography>\n                        <br/>\n                        <TextField\n                            key={'name'+link.id}\n                            data-key={'name'+link.id}\n                            label=\"Link Name\"\n                            defaultValue={link.name}\n                            helperText=\"This will appear under the links\"\n                            variant=\"outlined\"\n                            fullWidth\n                            useRef={link1name}\n                            onChange={(e) => {console.log(e.target.value)}}\n                        />\n                        <br/>\n                        <br/>\n                    <TextField\n                        label=\"Link Url\"\n                        defaultValue={link.linkURL}\n                        helperText=\"Users will be redirected to this link\"\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                    <br/>\n                    <br/>\n                    </div>\n                )\n                )\n            }\n        </div>\n    )\n}\nexport default ChangeLinksPage;\n","import React from 'react';\nimport Links from './../components/Links'\nimport Posts from './../components/Posts'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#FFF'\n        //border: '2px solid red'\n    }\n}))\n\nconst Home = ( {links, posts, profilePicture, username, name} ) => {\n    console.log(links)\n    const classes = useStyles();\n    return(\n        <div className= {classes.root} >\n            {\n                links.length === 0 ?\n                    ('')\n                    :\n                    <Links links={links} />\n            }\n            <Posts name={name} username={username} posts={posts} profilePicture={profilePicture}/>\n        </div>\n    )\n}\n\nexport default Home;\n","import React, {useState, useEffect, useContext} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport UserContext from './../context/UserContext'\nimport ViewerContext from './../context/ViewerContext'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography } from '@material-ui/core';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\n\nconst useStyles = makeStyles(theme => ({\n    profilePicture: {\n        width: '100px',\n        height: '100px',\n        borderRadius: '150px',\n        objectFit: 'cover',\n        margin: '10px',\n        padding: '10px'\n    },\n    editPicture: {\n        margin: '10px'\n    }\n}))\nconst EditViewerProfilePage = ({ profilePicture, links }) => {\n    const { viewerData, setViewerData } = useContext(ViewerContext)\n    const { setUserData } = useContext(UserContext)\n    const [x, setX] = useState('')\n    const history = useHistory();\n    const classes = useStyles();\n    //logs out user and viewer\n    const logout = () => {\n        console.log('logging out')\n        setViewerData({\n            token: undefined,\n            viewer: undefined,\n        })\n        setViewerData({\n            token: undefined,\n            viewer: undefined,\n        })\n        localStorage.setItem('auth-token', '')\n        localStorage.setItem('auth-token-viewer', '')\n        window.location.reload(false);\n    }\n    return(\n        <div>\n            {\n                viewerData.viewer === undefined ?\n                    (\n                        \"\"\n                    )\n                    :\n                    (\n                        <div>\n                        <div>\n                            <EditProfilePicture profilePicture={profilePicture} classes={classes}/>\n                            <Popup className={classes.editPicture} trigger={<Button> Change Profile Picture</Button>} position=\"bottom center\">\n                                <div>\n                                    <Button > remove current </Button>\n                                    <Button onClick={() => history.push('/edit/changeProfilePicture')}> upload new </Button>\n                                </div>\n                            </Popup>\n                        </div>\n                        <div>\n                            <Popup className={classes.editPicture} trigger={<Button>Logout </Button>} position=\"bottom center\">\n                                <div>\n                                    <Typography> Do you want to logout?</Typography>\n                                    <Button onClick={() => logout()}> Yes  </Button>\n                                </div>\n                            </Popup>\n                        </div>\n                        </div>\n                    )\n            }\n        </div>\n    )\n}\n\nconst EditProfilePicture = ({profilePicture, classes}) => {\n    return(\n        <div className={classes.profilePictureContainer}>\n            <img className={classes.profilePicture} src={profilePicture} />\n        </div>\n    )\n}\n\nexport default EditViewerProfilePage\n","import React, { useState, useContext, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button } from '@material-ui/core';\nimport ViewerContext from './../context/ViewerContext'\nimport EditViewerProfilePage from './EditViewerProfilePage'\nimport axios from 'axios'\nimport { serverURL } from './../global'\n\nconst ViewerLoginRegister = () => {\n    const [page, setPage] = useState('')\n    const { viewerData, setViewerData } = useContext(ViewerContext)\n    const classes = useStyles();\n    useEffect(() => {\n        if(viewerData.viewer === undefined) return\n        setPage('0')\n    }, [])\n\n    const renderView = () => {\n        switch(page){\n            case '0':\n                return <EditViewerProfilePage/>\n            default:\n                return <LoginRegister classes={classes}/>\n        }\n    }\n\n    return(\n        <div>\n            { renderView() }\n        </div>\n\n    )\n}\n\nconst LoginRegister = ({classes}) => {\n\n    return(\n        <div>\n            <Login classes={classes}/>\n            <Register classes={classes}/>\n        </div>\n    )\n}\n\nconst Login = ({ classes }) => {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword] = useState('');\n\n    const { setViewerData } = useContext(ViewerContext);\n    //submit function will setUserData to user Object\n    const submit = () => {\n\n        let data = JSON.stringify({\n            email: email,\n            password: password\n            }\n        )\n        let config = {\n          method: 'post',\n          url: `${serverURL}api/user/viewer/login`,\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data : data\n        };\n        axios(config)\n            .then((res) => {\n                localStorage.setItem('auth-token-viewer', res.data.token)\n                setViewerData({\n                    token: res.data.token,\n                    viewer: res.data.viewer,\n                })\n            window.location.reload(false);\n            })\n            .catch((err) => console.log(err))\n    }\n    return(\n        <div className={classes.login}>\n            <form>\n                <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <br/>\n                <TextField\n                    required\n                    id=\"standard-password-input\"\n                    label=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <br/>\n                <br/>\n                <Button onClick={submit}>Login</Button>\n            </form>\n        </div>\n    )\n}\n\nconst Register = ({ classes }) => {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword] = useState('');\n    const [ confirmPassword, setConfirmPassword] = useState('');\n    const [ name, setName] = useState('');\n    const [ username, setUsername] = useState('');\n    const [ snackbar, setSnackbar ] = useState('')\n\n    const submit = () => {\n        if( password !== confirmPassword ) return(new Error('passwords dont match'))\n        let data = JSON.stringify({\n            email: email,\n            password: password,\n            name: name,\n            username: username,\n            }\n        )\n        var config = {\n            method: 'post',\n            url: `${serverURL}api/user/viewer/register`,\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            data : data\n        };\n\n        axios(config)\n        .then(function (response) {\n          console.log(JSON.stringify(response.data));\n          setSnackbar('success')\n        })\n        .catch(function (error) {\n          console.log(error);\n          setSnackbar('fail')\n        });\n    }\n    return(\n        <div className={classes.register}>\n            <form>\n                <TextField\n                    required\n                    id=\"standard-required-email\"\n                    label=\"Email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <br/>\n                <TextField\n                    required\n                    id=\"standard-password-input\"\n                    label=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <br />\n                <TextField\n                    required\n                    id=\"standard-password-confirm-input\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n                <br/>\n                <TextField\n                    required\n                    id=\"name-standard-required\"\n                    label=\"Name\"\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <br/>\n                <TextField\n                    required\n                    id=\"username-standard-required\"\n                    label=\"Username (unique)\"\n                    onChange={(e) => {\n                        setUsername(e.target.value)\n                        console.log(username)\n                    }}\n                />\n                <br/>\n                <br/>\n                <Button onClick={submit}> Register </Button>\n            </form>\n            {\n                snackbar === 'success' ?\n                    (\"Proceed to login\")\n                    :\n                    (\"\")\n            }\n            {\n                snackbar === 'fail' ?\n                    (\"failed\")\n                    :\n                    (\"\")\n            }\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    pageRoot: {\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n        padding: '10px'\n\n    },\n    appbar:{\n        justifyContent: 'flex-end',\n    },\n    buttons:{\n        margin: '10px'\n    },\n    register:{\n        margin: '10px'\n    },\n    login:{\n        margin: '10px'\n    }\n})\n)\n\n\nexport default ViewerLoginRegister;\n","import React, { useState, useContext } from 'react';\nimport UserHome from './UserHome';\nimport Blog from './Blog';\nimport ViewerLoginRegister from './ViewerLoginRegister';\nimport BotNav from './../components/BotNav';\nimport Topnav from './../components/Topnav';\n\nimport ViewerContext from './../context/ViewerContext'\n\nimport { Grid, CssBaseline } from '@material-ui/core';\n\nconst ViewerPage = ({ links, posts, profilePicture, name, username, youtubeid}) => {\n    console.log(links)\n    const { viewerData } = useContext(ViewerContext)\n    console.log(viewerData)\n    const [tab, setTab] = useState(0);\n    const renderView = () => {\n        switch(tab){\n            case 0:\n                //if viewerData then return interactable else return login popup on interaction page\n                return <UserHome username={username} name={name} links={links} posts={posts} profilePicture={profilePicture} />\n            case 1:\n                return <Blog youtubeid={youtubeid}/>\n            case 2:\n                return <ViewerLoginRegister/>\n            default:\n                return new Error('This does not exist');\n        }\n    }\n\n  return (\n    <div>\n        <Grid container direction='column'>\n            <Topnav profilePicture={profilePicture} name={name}/>\n            <div style={containerStyles}>\n                {renderView()}\n            </div>\n            <BotNav value={tab} onChange={setTab}/>\n        </Grid>\n        <CssBaseline />\n    </div>\n  );\n}\n\n//TODO fix height when screen size increases\nconst containerStyles = {\n    height: 'calc(100vh - 112px)',\n    width: '100%',\n    background: '#fff',\n    overflow: 'auto',\n    textAlign: 'center',\n    maxWidth: '100%',\n    backgroundColor: '#FFF'\n};\n\nexport default ViewerPage;\n","import React, { useState, useEffect, useContext} from 'react';\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios';\nimport ViewerPage from './ViewerPage'\nimport { serverURL } from './../global'\nimport ViewerContext from './../context/ViewerContext'\n\nconst ProfilePage = () => {\n\n    const { viewerData } = useContext(ViewerContext)\n    const { usernameParam }  = useParams();\n    const [username, setUsername] = useState('')\n    const [profilePicture, setProfilePicture] = useState('')\n    const [links, setLinks] = useState([])\n    const [name, setName] = useState('')\n    const [posts, setPosts] = useState([])\n    const [youtubeid, setYoutubeid] = useState('')\n    console.log(usernameParam)\n    const url = serverURL + usernameParam;\n    console.log(url)\n    useEffect( async () => {\n        const res = await axios.get(url);\n        console.log(res)\n        setUsername(res.data.username)\n        setProfilePicture(res.data.profilePicture)\n        setLinks(res.data.links)\n        setName(res.data.name)\n        setPosts(res.data.posts)\n        setYoutubeid(res.data.youtubeid)\n        console.log(username)\n    }, [name])\n    return(\n        <div>\n            {\n                username === '' ?\n                    ''\n                    :\n                    <div>\n                        <ViewerPage username={username} name={name} links={links} posts={posts} profilePicture={profilePicture} youtubeid={youtubeid} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfilePage;\n","import React, { useContext, useState, useEffect }from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { Grid, Avatar, Typography } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport {TextField, Button, CssBaseline} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChatBubbleRoundedIcon from '@material-ui/icons/ChatBubbleRounded';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport Popup from 'reactjs-popup';\nimport axios from 'axios'\nimport ViewerContext from './../context/ViewerContext'\nimport UserContext from './../context/UserContext'\nimport Topnav from './../components/Topnav'\nimport { serverURL } from './../global'\n\nconst useStyles = makeStyles(theme => ({\n    profileAvatar:{\n        width: '50px',\n        height: '50px',\n        borderRadius: '25px',\n        objectFit: 'cover',\n    },\n    commentProfileAvatar:{\n        width: '40px',\n        height: '40px',\n        borderRadius: '25px',\n        objectFit: 'cover',\n    },\n    commentData:{\n        maxWidth: '100%',\n        fontSize: '14px',\n        width: '100%',\n\n\n    },\n    commentName:{\n        marginLeft: '15px',\n        fontSize: '15px',\n        fontWeight: '600'\n    },\n    commentDataContainer: {\n        maxWidth: '480px',\n        width: '70vw',\n        marginLeft: '15px',\n        wordWrap: 'break-word'\n    },\n    container:{\n        padding: '10px',\n    },\n    test: {\n        width: '100%',\n        height: 'auto',\n    },\n    root: {\n        borderRadius: \"10px\",\n        width: '100%',\n        maxWidth: '600px',\n        boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.25), 0 3px 10px 0 rgba(0, 0, 0, 0.075)',\n        padding: '5px',\n    },\n    name:{\n        lineHeight: 1.3,\n        marginLeft: '15px',\n        marginRight: '15px',\n        fontWeight: 400,\n    },\n    time: {\n        fontWeight: 200,\n        lineHeight: 1,\n        marginLeft: '16px',\n        fontSize: '13px',\n    },\n    caption:{\n        marginTop: '15px',\n        marginLeft: '15px',\n        fontWeight: 400,\n        fontSize: '14px',\n        lineHeight: 1.3,\n        width: '90%'\n    },\n    postImage:  {\n        marginTop: '15px',\n        borderRadius: '5px',\n        width: '100%',\n        height: 'auto'\n    },\n    profilePictureContainer: {\n    },\n    interactionsContainer: {\n        justifyContent: 'space-around',\n        marginTop: '-13px',\n        alignItems: 'center'\n\n    },\n    interactions: {\n        marginTop: '18px',\n        marginLeft: '10px'\n    },\n    commentContainer:{\n        width: '100%',\n        maxWidth: '600px',\n    }\n\n}))\nconst PostExpand = () => {\n    const classes = useStyles();\n    const location = useLocation();\n    const [comment, setComment] = useState('');\n    let editData;\n    console.log(location)\n    const { viewerData } = useContext(ViewerContext);\n    const { userData} = useContext(UserContext);\n    const { post, profilePicture, username, name}= location.postData;\n    useEffect(() => {\n        if (viewerData.viewer === undefined && userData.user === undefined) return;\n\n        if (userData.user === undefined){\n            editData = {\n                editData: [{\n                    postID: post.id,\n                    viewerUsername: viewerData.viewer.username,\n                    viewerName: viewerData.viewer.username,\n                    commentData: comment,\n                    userUsername: username\n                }]\n            }\n        } else{\n            editData = {\n                editData: [{\n                    postID: post.id,\n                    viewerUsername: userData.user.username,\n                    viewerName: userData.user.username,\n                    commentData: comment,\n                    userUsername: username\n                }]\n            }\n\n        }\n    }, [comment])\n\n    const handleCommentChange = e => {\n        setComment(e.target.value)\n    }\n\n    const handleCommentEvent = () => {\n        if(comment === '') return\n\n        const createCommentData = JSON.stringify(editData)\n        const config = {\n          method: 'post',\n          url: `${serverURL}api/addCommentUser/?editData=`,\n          headers: {\n            'auth-token': userData.token,\n          },\n        };\n        axios(config)\n            .then(res => {\n                setComment('')\n            })\n            .catch(err => console.log(err))\n    }\n    return(\n        <div>\n            <Topnav profilePicture={profilePicture} name={name}/>\n                <div className={classes.container}>\n\n                    <div className={classes.root}>\n                        <Grid  container >\n                            <ProfilePicture classes={classes} username={username} profilePicture={profilePicture}/>\n                            <Grid item>\n                                <Name classes={classes} name={username}/>\n                                <Time classes={classes} time={post.time}/>\n                            </Grid>\n                        </Grid>\n                        <Grid container>\n                            <Grid className={classes.test} item >\n                                <Caption classes={classes} caption={post.content[0].text}/>\n                                <PostImage classes={classes} image={post.content[0].url}/>\n                            </Grid>\n                        </Grid>\n                        <hr/>\n                        <Grid container >\n                            <Grid item container className={classes.interactionsContainer}>\n                                <LikeButton style={{ alignSelf: \"center\" }} classes={classes} />\n                                <CommentButton classes={classes} />\n                            </Grid>\n                        </Grid>\n                        <hr/>\n                        {\n                            (viewerData.viewer === undefined && userData.user === undefined) ?\n                                (\n                                    <Grid container>\n                                        <Grid item >\n                                            <Typography>Login / Register to post comments</Typography>\n                                        </Grid>\n                                    </Grid>\n                                )\n                                :\n                                (\n\n                                    <Grid container>\n                                        <Grid item >\n                                            <TextField\n                                                id=\"standard-textarea\"\n                                                label=\"Add Comment\"\n                                                variant=\"outlined\"\n                                                multiline\n                                                fullWidth\n                                                onChange={(e) => handleCommentChange(e)}\n                                            />\n                                            <Button onClick={() => handleCommentEvent()}> Post </Button>\n                                        </Grid>\n                                    </Grid>\n                                )\n                        }\n                        <hr/>\n                        <Grid container>\n                            {\n                                post.comments ?\n                                    (\n                                        post.comments.map(comment => (\n                                            <div id={comment.id} className={classes.commentContainer}>\n                                                <Grid container item xs={12} >\n                                                    <CommentProfilePicture classes={classes} commentUsername={comment.viewerUsername} />\n                                                    <Grid item>\n                                                        <CommentName classes={classes} name={comment.viewerName} />\n                                                        <CommentData classes={classes} commentData={comment.commentData} />\n                                                    </Grid>\n                                                </Grid>\n                                                <hr/>\n                                            </div>\n                                            ))\n                                    )\n                                    :\n                                    (\"\")\n                            }\n                        </Grid>\n                    </div>\n                </div>\n            <CssBaseline />\n        </div>\n    )\n}\n\nconst ProfilePicture = ({classes, profilePicture, username}) => {\n    //const initial = username[0]\n    const initial = 'M'\n    return(\n        <div className={classes.profileAvatar}>\n            <Avatar className={classes.profileAvatar}>\n                {profilePicture ?\n                <img className={classes.profileAvatar} src={profilePicture} alt='profile'></img>\n                :\n                <PersonIcon/>\n                }\n            </Avatar>\n        </div>\n    )\n}\nconst Name = ({classes, name}) => {\n    return(\n        <div>\n            <Typography align='left' className={classes.name}>{name}</Typography>\n        </div>\n    )\n}\n\nconst Time= ({classes, time}) => {\n    return(\n        <div>\n            <Typography align='left' className={classes.time}>{time}</Typography>\n        </div>\n    )\n}\nconst Caption = ({classes, caption}) => {\n    return(\n        <div>\n            <Typography align='left' className={classes.caption}>\n                {caption}\n            </Typography>\n        </div>\n    )\n}\nconst PostImage = ({classes, image }) => {\n    return(\n            <img className={classes.postImage} src={image} alt='post'></img>\n    )\n}\n\nconst LikeButton = ({classes}) => {\n    const [liked, setLiked] = useState('')\n    return(\n        <div className={classes.interactions}>\n            {\n                liked === 'liked' ?\n                    (\n                        <FavoriteOutlinedIcon onClick={() => setLiked('')}/>\n                    )\n                    :\n                    (\n                        <FavoriteBorderIcon onClick={() => setLiked('liked')}/>\n                    )\n            }\n        </div>\n    )\n}\nconst LikeNumber= ({classes, likes}) => {\n    return(\n        <div className={classes.interactions}>\n            <Typography>Likes : {likes}</Typography>\n        </div>\n    )\n}\nconst CommentButton = ({classes}) => {\n    return(\n        <div className={classes.interactions}>\n            <ChatBubbleRoundedIcon />\n        </div>\n    )\n}\nconst CommentNumber = ({classes, comments}) => {\n    return(\n        <div className={classes.interactions}>\n            <Typography>Comments : {comments.length}</Typography>\n        </div>\n    )\n}\n\nconst CommentProfilePicture = ({classes, commentProfilePicture, commentUsername}) => {\n    //const initial = username[0]\n    const initial = 'M'\n    return(\n        <div className={classes.commentProfileAvatar}>\n            <Avatar className={classes.commentProfileAvatar}>\n                {\n                commentProfilePicture ?\n                <img className={classes.profileAvatar} src={commentProfilePicture} alt='profile'></img>\n                :\n                <PersonIcon />\n                }\n            </Avatar>\n        </div>\n    )\n}\n\nconst CommentName = ({classes, name}) => {\n    return(\n        <div>\n            <Typography className={classes.commentName}>{name}</Typography>\n        </div>\n    )\n}\n\nconst CommentData = ({ classes, commentData  }) => {\n    return(\n        <div className={classes.commentDataContainer}>\n            <Typography className={classes.commentData}> {commentData}  </Typography>\n        </div>\n    )\n}\n\nconst ViewerLoginButton = () => {\n    return(\n        <Popup\n            trigger={<Button variant='outlined' className=\"button\"> Login to post comments</Button>}\n            modal\n            nested\n          >\n            {close => (\n              <div className=\"modal\">\n                <div className=\"header\"> Login or Register</div>\n                <div className=\"actions\">\n                  <Button\n                    className=\"button\"\n                    onClick={() => {\n                      console.log('modal closed ');\n                      close();\n                    }}\n                  >\n                    close modal\n                  </Button>\n                  <Button onClick={close}>\n                      Cancel\n                  </Button>\n                </div>\n              </div>\n            )}\n          </Popup>\n    )\n}\n\nexport default PostExpand;\n","import axios from 'axios';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport React, { useState, useEffect }from 'react';\nimport UserContext from './context/UserContext';\nimport ViewerContext from './context/ViewerContext';\n\nimport AuthHomePage from './pages/AuthHomePage'\nimport CreatePostPage from './pages/CreatePostPage'\nimport ChangeProfilePicturePage from './pages/ChangeProfilePicturePage'\nimport ChangeLinksPage from './pages/ChangeLinksPage'\nimport ProfilePage from './pages/ProfilePage'\nimport PostExpand from './pages/PostExpand'\nimport { serverURL } from './global';\nconst App = () => {\n    console.log(serverURL)\n    // userData for  app client login purposes\n    const [userData, setUserData] = useState({\n        token: undefined,\n        user: undefined,\n    });\n    const [viewerData, setViewerData] = useState({\n        token: undefined,\n        viewer: undefined,\n    });\n    useEffect(() => {\n        //start app client login verification\n\n        const checkLoggedIn = async () => {\n            let token = localStorage.getItem('auth-token')\n            if (token === null) {\n                localStorage.setItem('auth-token', '')\n                token = '';\n            }\n            //returns boolean\n            const tokenRes = await axios.post(\n                `${serverURL}api/user/tokenIsValid`, null,\n                { headers: {'auth-token' : token} }\n            );\n            if(tokenRes.data.valid){\n                setUserData({token, user: tokenRes.data.userObj})\n            }\n        };\n        const checkViewerLoggedIn = async () => {\n            let token = localStorage.getItem('auth-token-viewer')\n            if (token === null) {\n                localStorage.setItem('auth-token-viewer', '')\n                token = '';\n            }\n            //returns boolean\n            const tokenRes = await axios.post(\n                `${serverURL}api/user/viewer/tokenIsValid`, null,\n                { headers: {'auth-token-viewer' : token} }\n            );\n            if(tokenRes.data.valid){\n                setViewerData({token, viewer: tokenRes.data.viewerObj})\n            }\n        }\n        checkLoggedIn();\n        checkViewerLoggedIn();\n        //end app client login verification\n    }, [] )\n\n    return(\n        <div>\n            <BrowserRouter>\n                <UserContext.Provider value={{ userData, setUserData }}>\n                    <ViewerContext.Provider value={{ viewerData, setViewerData }}>\n                        <Switch>\n                            <Route exact path='/' component={AuthHomePage} />\n                            <Route exact path='/edit/createPost' component={CreatePostPage} />\n                            <Route exact path='/edit/changeProfilePicture' component={ChangeProfilePicturePage} />\n                            <Route exact path='/edit/changeLinks' component={ChangeLinksPage} />\n                            <Route exact path='/:usernameParam' render={(props) => <ProfilePage{...props} />} />\n                            <Route exact path='/post/:postid' render={(props) => <PostExpand{...props} />} />\n                        </Switch>\n                    </ViewerContext.Provider>\n                </UserContext.Provider>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700]\n    },\n    secondary: {\n      light: lightGreen[300],\n      main: lightGreen[500],\n      dark: lightGreen[700]\n    },\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}